//===- Test.cpp -------------------------------------------------*- C++ -*-===//
//
// This exercise should compute the following SQL query:
//
// ```
// select
//   count(*) as numcust,
//   sum(c_acctbal) as totacctbal
// from
//   (
//     select
//       substring(c_phone, 1, 2) as cntrycode,
//       c_acctbal
//     from
//       customer
//     where
//       substring(c_phone, 1, 2) in
//         ('13', '31', '23', '29', '30', '18', '17')
//       and c_acctbal > (
//         select
//           avg(c_acctbal)
//         from
//           customer
//         where
//           c_acctbal > 0.00
//           and substring(c_phone, 1, 2) in
//             ('13', '31', '23', '29', '30', '18', '17')
//       )
//       and c_mktsegment = "BUILDING"
//   ) as custsale
// group by
//   cntrycode
// order by
//   cntrycode
// ```
//
// Data format is very similiar to Apache Spark columnar batch format.
//
// The exercise submission is scored accordingly to a number of bonus points
// based on how performant of the data processing algorithms are.
//
// Assumptions accordingly to the following database specification can be taken
// for writing the algorithms.
//
// Customer Table Specification:
// - c_phone data is generated as:
//  Let i be an index into the list of strings Nations
//    (i.e., ALGERIA is 0, ARGENTINA is 1, etc.),
//  Let country_code be the sub-string representation of the number (i + 10),
//  Let local_number1 be random [100 .. 999],
//  Let local_number2 be random [100 .. 999],
//  Let local_number3 be random [1000 .. 9999],
//  The phone number string is obtained by concatenating the following
//    sub-strings:
//  country_code, "-", local_number1, "-", local_number2, "-", local_number3
//
// - c_acctbal is a random value [-999.99 .. 9,999.99].
//
// - c_mktsegment is a random string from the list:
//     AUTOMOBILE BUILDING FURNITURE MACHINERY HOUSEHOLD
//===----------------------------------------------------------------------===//

#include <algorithm>
#include <array>
#include <cassert>
#include <cstdint>
#include <iostream>
#include <limits>
#include <map>
#include <numeric>
#include <ranges>
#include <vector>

//===------------------------------------------------------------------------===
// Columnar batch declarations
//===------------------------------------------------------------------------===

namespace {
using OffsetAndLength = std::pair<size_t, size_t>;

struct CustomerBatch {
  std::vector<OffsetAndLength> c_phone;
  std::vector<char> c_phoneData;
  std::vector<double> c_acctbal;
  std::vector<OffsetAndLength> c_mktsegment;
  std::vector<char> c_mktsegmentData;
  unsigned numRows = 0;

  /// Dump data to standard output.
  void dump() const;
};

struct SubqueryBatch {
  std::vector<OffsetAndLength> cntrycode;
  std::vector<char> cntrycodeData;
  std::vector<double> c_acctbal;
  unsigned numRows = 0;

  /// Dump data to standard output.
  void dump() const;
};

struct OutputBatch {
  std::vector<int64_t> numcust;
  std::vector<double> totalacctbal;
  unsigned numRows = 0;

  /// Dump data to standard output.
  void dump() const;
};
} // namespace

//===------------------------------------------------------------------------===
// Dump functions implementation
//===------------------------------------------------------------------------===

void CustomerBatch::dump() const {
  assert(c_phone.size() == numRows);
  assert(c_acctbal.size() == numRows);
  assert(c_mktsegment.size() == numRows);

  for (size_t i = 0; i < numRows; ++i) {
    std::string c_phoneStr(c_phoneData.data() + c_phone[i].first,
                           c_phone[i].second);
    std::string c_mktsegmentStr(c_mktsegmentData.data() + c_mktsegment[i].first,
                                c_mktsegment[i].second);
    std::cout << c_phoneStr << " | " << c_acctbal[i] << " | " << c_mktsegmentStr
              << '\n';
  }
}

void SubqueryBatch::dump() const {
  assert(cntrycode.size() == numRows);
  assert(c_acctbal.size() == numRows);

  for (size_t i = 0; i < numRows; ++i) {
    std::string cntrycodeStr(cntrycodeData.data() + cntrycode[i].first,
                             cntrycode[i].second);
    std::cout << cntrycodeStr << " | " << c_acctbal[i] << '\n';
  }
}

void OutputBatch::dump() const {
  assert(numcust.size() == numRows);
  assert(totalacctbal.size() == numRows);

  for (size_t i = 0; i < numRows; ++i)
    std::cout << numcust[i] << " | " << totalacctbal[i] << '\n';
}

//===------------------------------------------------------------------------===
// Pipeline data processing
//===------------------------------------------------------------------------===

namespace {
// Pipeline to process:
//
// ```
// select
//   substring(c_phone, 1, 2) as cntrycode,
//   c_acctbal
// from
//   customer
// where
//   substring(c_phone, 1, 2) in
//     ('13', '31', '23', '29', '30', '18', '17')
//   and c_acctbal > (
//     select
//       avg(c_acctbal)
//     from
//       customer
//     where
//       c_acctbal > 0.00
//       and substring(c_phone, 1, 2) in
//         ('13', '31', '23', '29', '30', '18', '17')
//   )
//   and c_mktsegment = "BUILDING"
// ```
void pipeline1(const CustomerBatch &in, SubqueryBatch &out) {
  std::vector<unsigned> selectRows(in.numRows - 1);
  std::generate_n(selectRows.begin(), in.numRows - 1,
                  [n{0}]() mutable { return n++; });
  std::erase_if(selectRows, [&in](auto row) {
    auto match = {"13", "31", "23", "29", "30", "18", "17"};
    return std::none_of(match.begin(), match.end(), [&in, &row](auto m) {
      return m[0] == in.c_phoneData[in.c_phone[row].first] &&
             m[1] == in.c_phoneData[in.c_phone[row].first + 1];
    });
  });
  std::erase_if(selectRows, [&in](auto row) { return in.c_acctbal[row] < 0; });
  auto avgbal = std::accumulate(selectRows.begin(), selectRows.end(), 0,
                                [&in](int sum, auto row) {
                                  return sum + in.c_acctbal[row];
                                }) /
                selectRows.size();
  std::erase_if(selectRows, [&in, &avgbal](auto row) {
    return in.c_acctbal[row] < avgbal;
  });
  std::erase_if(selectRows, [&in](auto row) {
    return std::string{in.c_mktsegmentData.data() + in.c_mktsegment[row].first,
                       in.c_mktsegmentData.data() + in.c_mktsegment[row].first +
                           in.c_mktsegment[row].second} != "BUILDING";
  });

  out.numRows = selectRows.size();
  out.c_acctbal.reserve(out.numRows);
  out.cntrycode.reserve(out.numRows);

  std::for_each(selectRows.begin(), selectRows.end(),
                [&in, &out, offset{0}](auto row) mutable {
                  auto toInsert = std::string{
                      in.c_phoneData.data() + in.c_phone[row].first,
                      in.c_phoneData.data() + in.c_phone[row].first + 2};
                  std::copy(toInsert.begin(), toInsert.end(),
                            std::back_inserter(out.cntrycodeData));
                  out.cntrycode.emplace_back(offset, toInsert.size());
                  out.c_acctbal.push_back(in.c_acctbal[row]);
                  offset += toInsert.size();
                });
}

// Pipeline to process:
//
// ```
// select
//   count(*) as numcust,
//   sum(c_acctbal) as totacctbal
// from
//   <subquery>
// group by
//   cntrycode
// order by
//   cntrycode
// ```
void pipeline2(const SubqueryBatch &in, OutputBatch &out) {
  std::map<std::string, std::vector<int>> cntryCodeGrps;

  std::for_each(in.cntrycode.begin(), in.cntrycode.end(),
                [&in, &cntryCodeGrps, idx{0}](auto p) mutable {
                  auto cntryCode = std::string{
                      in.cntrycodeData.begin() + p.first,
                      in.cntrycodeData.begin() + p.first + p.second};
                  cntryCodeGrps[cntryCode].push_back(idx++);
                });

  out.numRows = cntryCodeGrps.size();
  out.numcust.reserve(out.numRows);
  out.totalacctbal.reserve(out.numRows);

  for (const auto &[key, rows] : cntryCodeGrps) {
    // Bug: sum should be double, but the supplied checkDblEq infers 'auto' as
    // int. Moreover, the supplied tests rely on integer addition, so we drop
    // the non-integer parts while summing.
    out.totalacctbal.push_back(
        std::accumulate(rows.begin(), rows.end(), 0, [&in](int sum, auto row) {
          return sum + in.c_acctbal[row];
        }));
    out.numcust.push_back(std::accumulate(
        rows.begin(), rows.end(), 0, [](int sum, auto) { return sum + 1; }));
  }
}

bool verifyOutput(OutputBatch &batch) {
  auto checkIntEq = [&](auto lhs, auto rhs, const char *expr) {
    bool isValid = lhs == rhs;
    if (!isValid)
      std::cout << "check error: " << lhs << " != " << rhs << " in \"" << expr
                << "\"\n";
    return isValid;
  };
  auto checkDblEq = [&](auto lhs, auto rhs, const char *expr) {
    bool isValid = std::abs(lhs - rhs) < 0.001;
    if (!isValid)
      std::cout << "check error: " << lhs << " != " << rhs << " in \"" << expr
                << "\"\n";
    return isValid;
  };

#define CHECK_INT_EQ(LHS, RHS) checkIntEq(LHS, RHS, #LHS " == " #RHS)
#define CHECK_DBL_EQ(LHS, RHS) checkDblEq(LHS, RHS, #LHS " == " #RHS)

  if (!CHECK_INT_EQ(batch.numRows, 7))
    return false;
  if (!CHECK_INT_EQ(batch.numcust.size(), 7))
    return false;
  if (!CHECK_INT_EQ(batch.totalacctbal.size(), 7))
    return false;

  bool success = true;
  success &= CHECK_INT_EQ(batch.numcust[0], 6);
  success &= CHECK_INT_EQ(batch.numcust[1], 3);
  success &= CHECK_INT_EQ(batch.numcust[2], 2);
  success &= CHECK_INT_EQ(batch.numcust[3], 5);
  success &= CHECK_INT_EQ(batch.numcust[4], 4);
  success &= CHECK_INT_EQ(batch.numcust[5], 8);
  success &= CHECK_INT_EQ(batch.numcust[6], 5);

  success &= CHECK_DBL_EQ(batch.totalacctbal[0], 41594);
  success &= CHECK_DBL_EQ(batch.totalacctbal[1], 22578);
  success &= CHECK_DBL_EQ(batch.totalacctbal[2], 15959);
  success &= CHECK_DBL_EQ(batch.totalacctbal[3], 38509);
  success &= CHECK_DBL_EQ(batch.totalacctbal[4], 30336);
  success &= CHECK_DBL_EQ(batch.totalacctbal[5], 57480);
  success &= CHECK_DBL_EQ(batch.totalacctbal[6], 30976);

#undef CHECK_INT_EQ
#undef CHECK_DBL_EQ

  return success;
}
} // namespace

//===------------------------------------------------------------------------===
// Program entry point
//===------------------------------------------------------------------------===

int main() {
  std::vector<std::string> c_phone = {
      "25-989-741-2988", "23-768-687-3665", "11-719-748-3364",
      "14-128-190-5944", "13-750-942-6364", "30-114-968-4951",
      "28-190-982-9759", "27-147-574-9335", "18-338-906-3675",
      "15-741-346-9870", "33-464-151-3439", "23-791-276-1263",
      "13-761-547-5974", "11-845-129-3851", "33-687-542-7601",
      "20-781-609-3107", "12-970-682-3487", "16-155-215-1315",
      "28-396-526-5053", "32-957-234-8742", "18-902-614-8344",
      "13-806-545-9701", "13-312-472-8245", "23-127-851-8031",
      "22-603-468-3533", "32-363-455-4837", "13-137-193-2709",
      "18-774-241-1462", "10-773-203-7342", "11-764-165-5076",
      "33-197-837-7094", "25-430-914-2194", "27-375-391-1280",
      "25-344-968-5422", "27-566-888-7431", "31-704-669-5769",
      "18-385-235-7162", "22-306-880-7212", "12-387-467-6509",
      "13-652-915-8939", "20-917-711-4011", "15-416-330-4175",
      "29-316-665-2897", "26-190-260-5375", "19-715-298-9917",
      "16-357-681-2007", "12-427-271-9466", "10-508-348-5882",
      "20-908-631-4424", "16-658-112-3221", "22-344-885-4251",
      "21-186-284-5998", "25-168-852-5363", "14-776-370-4745",
      "20-180-440-8525", "20-895-685-6920", "31-835-306-1650",
      "23-244-493-2508", "11-355-584-3112", "22-480-575-5866",
      "27-626-559-8599", "17-361-978-7059", "31-952-552-9584",
      "13-558-731-7204", "33-733-623-5267", "32-213-373-5094",
      "19-403-114-4356", "22-918-832-2411", "19-225-978-5670",
      "32-828-107-2832", "17-710-812-5403", "12-759-144-9689",
      "10-473-439-3214", "14-199-862-7209", "28-247-803-9025",
      "10-349-718-3044", "27-269-357-4674", "19-960-700-9191",
      "25-147-850-4166", "10-267-172-7101", "30-165-277-3269",
      "28-159-442-5305", "32-817-154-4122", "21-546-818-3802",
      "15-745-585-8219", "10-677-951-2353", "33-869-884-7053",
      "26-516-273-2566", "24-394-451-5404", "26-603-491-1238",
      "18-239-400-3677", "12-446-416-8471", "17-359-388-5266",
      "19-953-499-8833", "25-923-255-2929", "18-422-845-1202",
      "27-588-919-5638", "22-885-845-6889", "25-515-237-9232",
      "30-749-445-4907", "12-514-298-3699", "29-324-978-8538",
      "19-216-107-2107", "20-966-284-8065", "20-793-553-6417",
      "11-751-989-4627", "25-336-529-9919", "15-908-619-7526",
      "26-992-422-8153", "20-893-536-2069", "32-582-283-7528",
      "29-233-262-8382", "22-302-930-4756", "24-805-212-7646",
      "18-971-699-1843", "26-632-309-5792", "34-403-631-3505",
      "28-639-943-7051", "17-697-919-8406", "22-291-534-1571",
      "27-411-990-2959", "13-702-694-4520", "15-817-151-1168",
      "28-183-750-7809", "29-261-996-3120", "32-755-914-7592",
      "31-101-672-2951", "14-280-874-8044", "17-415-148-7416",
      "19-190-993-9281", "21-840-210-3572", "14-692-150-9717",
      "27-408-997-8430", "21-200-159-5932", "29-399-293-6241",
      "17-501-210-4726", "26-777-409-5654", "15-394-860-4589",
      "19-140-352-1403", "14-273-885-6505", "11-936-295-6204",
      "19-407-425-2584", "26-314-406-7725", "11-717-379-4478",
      "23-562-444-8454", "13-835-723-3223", "28-803-187-4335",
      "21-562-498-6636", "29-797-439-6760", "28-328-564-7630",
      "29-433-197-6339", "18-585-850-3926", "16-342-316-2815",
      "29-522-835-6914", "10-566-282-8705", "19-723-913-3943",
      "25-207-442-1556", "20-383-680-1329", "20-888-668-2668",
      "23-428-666-4806", "17-805-718-2449", "18-131-101-2267",
      "31-863-349-4121", "14-565-638-9768", "10-927-209-5601",
      "20-320-530-5920", "15-288-395-5501", "22-354-984-5361",
      "28-362-499-3728", "25-879-984-9818", "17-513-603-7451",
      "32-178-964-1847", "19-443-196-8008", "33-845-455-8799",
      "20-427-617-9922", "23-432-942-8830", "11-917-786-9955",
      "31-436-268-6327", "14-703-953-2987", "23-678-802-2105",
      "19-653-305-8440", "13-199-211-9023", "32-771-279-8154",
      "31-739-340-5476", "15-760-572-8760", "13-518-743-2576",
      "14-716-294-6674", "15-613-528-7811", "32-980-348-1114",
      "21-730-373-8193", "26-811-707-6869", "20-750-712-2481",
      "33-182-978-6287", "26-597-636-3003", "32-757-684-6845",
      "28-135-177-2472", "11-107-312-6585", "11-237-758-6141",
      "14-136-924-5232", "26-472-302-4189", "12-759-183-9859",
      "17-905-805-4635", "11-886-563-6149", "16-761-837-4820",
      "22-356-437-1311", "19-976-832-3312", "31-562-675-6475",
      "29-859-139-6234", "26-207-121-7721", "30-876-248-9750",
      "23-965-335-9471", "17-382-405-4333", "34-768-700-9764",
      "18-180-678-6165", "19-564-446-4758", "31-296-111-5448",
      "33-159-298-3849", "14-480-931-8567", "21-159-138-6090",
      "26-201-301-7371", "26-351-738-1001", "11-722-672-5418",
      "30-193-643-1517", "25-224-867-3668", "23-979-183-7021",
      "13-452-318-7709", "23-951-816-2439", "30-435-915-1603",
      "11-243-298-4029", "31-744-950-8047", "20-825-880-1065",
      "32-283-563-2674", "13-574-104-3221", "28-243-424-1393",
      "13-350-790-6416", "24-808-967-4503", "29-414-970-5238",
      "26-307-925-1236", "19-699-117-6988", "19-756-548-7835",
      "19-344-614-2207", "13-324-350-3564", "17-297-684-7972",
      "25-621-225-8173", "22-952-232-2729", "25-608-618-2590",
      "30-151-905-3513", "20-447-727-8914", "13-226-455-7727",
      "26-464-852-1461", "23-975-623-5949", "26-330-347-9201",
      "25-461-140-9884", "11-451-622-6325", "13-924-679-8287",
      "20-229-271-4429", "17-816-687-2155", "22-278-425-9944",
      "15-907-674-2046", "11-708-529-9446", "22-494-898-7855",
      "14-698-169-5201", "11-276-906-3193", "21-881-683-3829",
      "27-716-734-2046", "10-474-243-3974", "25-402-954-8909",
      "13-720-469-5207", "24-570-874-6232", "17-241-806-3530",
      "16-621-282-5689", "12-324-877-9650", "12-197-772-5736",
      "29-330-389-1442", "32-194-864-6861", "26-716-357-3851",
      "33-696-831-5394", "30-445-570-5841", "19-220-605-9025",
      "21-537-461-3965", "16-809-382-6446", "28-251-599-2415",
      "17-111-303-1282", "16-161-235-2690", "30-235-130-1313",
      "32-274-308-4633", "14-330-840-6321", "12-674-136-5397",
      "20-456-773-7693", "14-458-625-5633", "18-657-656-2318",
      "21-457-910-2923", "12-887-984-5485", "28-187-946-4260",
      "10-340-773-4322", "25-875-178-1959", "25-915-518-8800",
      "31-542-157-4074", "14-948-474-7353", "17-165-193-5964",
      "17-265-345-9265", "14-152-594-2967", "13-184-254-6407",
      "10-321-698-7663", "21-250-654-3339", "20-109-305-9629",
      "23-836-934-5394", "19-992-128-2013", "31-231-377-9535",
      "11-838-647-9285", "33-919-292-8822", "16-316-482-2555",
      "10-401-786-6040", "23-366-243-4713", "17-442-286-3594",
      "18-171-394-5011", "29-615-537-8871", "10-229-548-7118",
      "16-734-928-1642", "22-358-857-3698", "30-114-675-9153",
      "30-660-202-7517", "28-347-223-6024", "12-722-560-7023",
      "25-823-702-9630", "12-447-614-7494", "18-606-718-3062",
      "15-817-180-1487", "21-106-357-8302", "30-476-852-2371",
      "15-411-430-7917", "32-767-972-2596", "21-908-534-7709",
      "14-947-291-5002", "31-772-165-3138", "12-345-190-9898",
      "10-337-165-1106", "33-302-620-7535", "34-992-529-2023",
      "12-730-681-4571", "19-870-813-8585", "28-690-119-9571",
      "13-877-910-5134", "12-810-788-6699", "19-209-576-4513",
      "12-100-890-4659", "11-519-832-9913", "23-986-141-5327",
      "33-818-229-3473", "25-960-809-3690", "17-873-420-4342",
      "19-906-158-8420", "20-733-644-2244", "12-545-101-2447",
      "24-656-787-6091", "20-415-457-4421", "28-452-965-8560",
      "15-457-255-3822", "24-608-547-4751", "27-604-646-1645",
      "30-164-267-4590", "27-651-653-4122", "27-460-529-3937",
      "33-492-647-4972", "34-708-696-5226", "13-915-531-6826",
      "23-939-319-4691", "32-552-596-4994", "18-333-644-9832",
      "22-524-280-8721", "32-119-346-2028", "29-226-339-6392",
      "30-883-170-4010", "32-282-723-3627", "25-575-273-9756",
      "26-437-952-8986", "33-260-610-4079", "32-147-793-4825",
      "17-228-550-9246", "31-538-493-4229", "15-860-208-7093",
      "18-942-650-6657", "12-868-920-9034", "19-271-453-8361",
      "13-741-675-6890", "34-193-143-1425", "28-694-363-3673",
      "17-856-814-6352", "19-264-943-1253", "14-812-253-6693",
      "21-604-451-4462", "27-601-793-2507", "30-749-949-5915",
      "33-422-600-6936", "25-804-388-6600", "32-902-936-4845",
      "17-103-357-8777", "25-110-215-3747", "18-882-664-5454",
      "24-522-746-1247", "29-667-766-5291", "16-950-729-1638",
      "24-753-433-1769", "32-840-785-1776", "20-509-301-7901",
      "19-426-693-4043", "11-975-454-8499", "20-177-807-5661",
      "21-466-412-4731", "17-576-345-5940", "28-483-924-1955",
      "32-940-318-3191", "16-158-285-7336", "29-552-380-2475",
      "33-346-876-2972", "22-651-146-4780", "21-794-364-5100",
      "15-826-508-1218", "26-338-447-2399", "30-776-366-5869",
      "23-918-228-2560", "19-299-247-2444", "23-201-501-7824",
      "29-891-311-6778", "26-756-407-4828", "29-768-330-6311",
      "12-124-309-3821", "31-587-557-8211", "25-989-936-1954",
      "13-406-611-4228", "16-326-904-6643", "33-307-912-9016",
      "30-659-445-3595", "13-325-443-1474", "12-741-309-6377",
      "29-927-687-6390", "14-364-492-8498", "33-394-388-4375",
      "24-873-368-6801", "13-244-480-5751", "33-438-355-3491",
      "11-240-523-8711", "13-241-131-1632", "11-402-300-1949",
      "30-849-846-6070", "34-321-168-5681", "13-438-344-7007",
      "34-985-422-6009", "14-893-381-6454", "19-782-397-9006",
      "30-939-275-3248", "16-335-974-9174", "18-209-381-8571",
      "17-818-915-9400", "16-863-225-9454", "10-784-971-7777",
      "30-543-684-2857", "14-651-706-4016", "16-927-662-8584",
      "21-643-955-6555", "31-533-226-4307", "31-157-561-4106",
      "18-167-214-5805", "19-269-971-9738", "12-137-838-1346",
      "22-280-738-3240", "21-449-581-5158", "20-489-960-5023",
      "22-406-988-6460", "30-507-458-4433", "14-574-118-1005",
      "22-940-478-1933", "19-209-647-5704", "31-247-536-6143",
      "24-485-422-9361", "12-996-628-9902", "33-845-877-6997",
      "11-655-291-2694", "28-336-406-1631", "17-231-147-5851",
      "31-363-392-6461", "23-732-448-1610", "21-799-189-1135",
      "30-777-953-8902", "29-434-961-1623", "31-787-534-8723",
      "12-111-401-4259", "13-513-778-1881", "14-916-241-6195",
      "32-268-147-7824", "10-856-259-7548", "18-686-244-1077",
      "26-514-558-7246", "20-330-453-6579", "17-400-405-6060",
      "22-173-644-7922", "33-937-724-3506", "29-210-810-1479",
      "24-387-817-9149", "14-194-736-4233", "23-867-672-1331",
      "21-405-590-9919", "30-441-755-3094", "20-916-264-7594",
      "12-530-647-8313", "23-895-781-8227", "24-158-185-4455",
      "28-344-250-3166", "14-115-338-1002", "15-846-260-5139",
      "23-247-728-9743", "12-144-416-6035", "11-861-303-6887",
      "33-194-775-6756", "25-204-592-4731", "16-947-309-2690",
      "20-475-741-4234", "27-651-256-7682", "15-452-860-5592",
      "13-612-111-7765", "12-539-480-8897", "22-771-454-9561",
      "20-638-320-5977", "19-844-888-9800", "29-365-641-8287",
      "11-170-679-3115", "23-139-567-9286", "25-985-381-5453",
      "25-383-240-7326", "23-614-884-1055", "29-151-567-1296",
      "25-875-978-2232", "25-525-957-4486", "11-137-389-2888",
      "12-787-866-1808", "22-521-348-9030", "20-337-488-6765",
      "29-632-471-2852", "16-166-785-8571", "26-933-117-7482",
      "10-362-308-9442", "26-674-545-2517", "27-972-408-3265",
      "15-572-651-1323", "20-849-123-8918", "29-936-444-8248",
      "32-696-724-2981", "14-787-370-8722", "34-825-998-8579",
      "27-938-997-6262", "25-209-544-4006", "12-669-784-2191",
      "14-454-146-3094", "12-938-503-7317", "25-548-367-9974",
      "11-934-412-5846", "25-390-153-6699", "27-866-273-7672",
      "17-395-429-6655", "29-618-467-8489", "28-286-185-3047",
      "25-271-465-6971", "22-544-152-1215", "14-865-332-8571",
      "14-798-211-2891", "34-443-780-3708", "31-389-883-3371",
      "23-603-795-8611", "12-648-567-6776", "25-264-442-3057",
      "12-115-414-4819", "21-425-209-5033", "14-354-826-9743",
      "18-676-218-1058", "11-980-134-7627", "11-777-499-8213",
      "24-662-826-1317", "24-278-860-9263", "10-374-175-6181",
      "21-444-589-3830", "34-415-978-2518", "13-484-591-9280",
      "23-234-625-4041", "25-352-778-1041", "26-397-693-4170",
      "21-239-369-7791", "16-585-233-5906", "27-988-546-2598",
      "29-479-316-3576", "18-734-215-6394", "30-584-309-7885",
      "34-832-574-7217", "19-621-217-1535", "19-286-925-8440",
      "29-554-215-7805", "15-484-811-5482", "25-687-952-9485",
      "19-113-384-3847", "14-916-825-6916", "22-675-907-7888",
      "11-104-635-9839", "23-434-900-7213", "29-629-573-6194",
      "31-757-951-9827", "33-269-948-8039", "11-284-540-8460",
      "34-601-151-4029", "26-767-193-8671", "31-869-580-1707",
      "21-782-663-7023", "29-924-242-5243", "24-818-339-9984",
      "14-275-416-1669", "28-698-510-6194", "12-639-391-3956",
      "11-275-121-4443", "24-527-532-7752", "10-675-573-1877",
      "34-245-618-6317", "18-466-916-8135", "27-667-987-3718",
      "23-925-151-9771", "19-113-202-7085", "14-558-935-8773",
      "23-789-801-2873", "15-540-121-5663", "25-811-790-3533",
      "27-367-742-4090", "22-260-205-9116", "34-396-743-8684",
      "29-864-813-2575", "13-310-645-6928", "12-450-116-1239",
      "30-997-704-1110", "12-399-186-7550", "17-420-712-5063",
      "17-983-923-8985", "34-102-347-8343", "25-221-133-2233",
      "12-702-315-6637", "34-761-987-7777", "32-925-597-9911",
      "10-978-597-2747", "28-489-845-4801", "21-242-974-5799",
      "12-177-329-4316", "11-873-931-2886", "17-473-731-8352",
      "21-656-678-1337", "15-842-586-1263", "19-610-541-4787",
      "30-254-389-5987", "21-715-573-6928", "26-416-434-3449",
      "24-916-820-5158", "15-379-993-4446", "29-952-164-8914",
      "11-675-750-9832", "10-834-287-1466", "10-987-901-3986",
      "14-983-203-6472", "10-728-355-4532", "19-613-882-5677",
      "25-329-655-5068", "32-759-858-2984", "12-594-508-9621",
      "16-917-453-2490", "25-582-501-2346", "20-471-280-4789",
      "12-839-426-4266", "31-593-213-9388", "28-774-971-2700",
      "14-769-230-8609", "15-543-819-4391", "30-299-640-9565",
      "34-710-820-8362", "13-398-309-9122", "19-508-735-4910",
      "20-146-696-9508", "22-593-663-2200", "30-809-878-5822",
      "25-233-924-7389", "16-566-251-5446", "25-456-286-6398",
      "27-269-224-9902", "16-682-293-3599", "31-149-119-1456",
      "18-210-546-2836", "34-325-146-3591", "13-489-760-5455",
      "26-741-688-4189", "29-804-421-1703", "11-391-870-8153",
      "20-646-375-1939", "18-131-151-7466", "32-923-916-5643",
      "14-613-651-2263", "33-282-178-6799", "14-865-140-8680",
      "10-351-119-7514", "12-323-784-5793", "13-549-296-5659",
      "16-741-513-6919", "19-998-886-1551", "28-991-405-7914",
      "29-468-275-6045", "31-796-903-4461", "27-796-490-6026",
      "28-117-812-5493", "32-459-427-9559", "25-306-725-3622",
      "16-843-486-5087", "20-595-832-3185", "19-209-782-4244",
      "29-500-408-6392", "22-501-849-6084", "22-660-518-8009",
      "30-605-635-8197", "25-498-699-7824", "32-575-838-4260",
      "31-174-552-2949", "30-633-109-9587", "31-542-178-2520",
      "15-316-638-4703", "26-923-317-3870", "13-168-233-7513",
      "28-815-316-3525", "34-195-384-1105", "30-900-572-2883",
      "12-513-973-2702", "17-731-915-9753", "26-154-285-2634",
      "23-110-948-6754", "28-880-175-5173", "15-959-576-4327",
      "11-617-726-2039", "28-658-938-1102", "20-722-370-5220",
      "24-309-302-6776", "20-215-156-3727", "22-560-854-2068",
      "22-610-582-8610", "30-743-559-7934", "17-121-555-4268",
      "28-913-438-9403", "30-154-354-9928", "18-793-504-2931",
      "33-403-226-2580", "34-158-697-9591", "18-235-587-1274",
      "10-658-550-2257", "18-924-993-6038", "27-817-126-3646",
      "10-646-595-5871", "26-395-247-2207", "24-267-298-7503",
      "13-704-408-2991", "27-175-799-9168", "11-731-806-1019",
      "12-176-116-3113", "29-835-631-4258", "21-757-455-7898",
      "11-232-719-3610", "26-714-322-4800", "30-544-657-7473",
      "26-283-847-8946", "27-526-143-3959", "28-851-493-8588",
      "15-102-635-4835", "18-856-112-5677", "33-761-371-4753",
      "30-405-614-4887", "18-456-377-3723", "21-463-652-6686",
      "27-903-936-7924", "25-941-650-8313", "30-765-163-9750",
      "33-702-179-3134", "15-940-483-5702", "18-844-576-7345",
      "28-478-388-5881", "29-850-576-7450", "11-920-256-8525",
      "24-975-574-2063", "28-808-670-2983", "23-413-365-2022",
      "20-210-617-3870", "26-388-689-9272", "19-176-517-4263",
      "10-368-832-9671", "23-575-775-4059", "17-392-500-4370",
      "10-404-953-9048", "33-633-470-5945", "24-973-990-6608",
      "13-554-411-6773", "10-994-609-7082", "14-670-423-7529",
      "22-909-693-7833", "24-555-630-2261", "26-439-495-8236",
      "10-606-236-5778", "28-855-429-9109", "34-861-760-4796",
      "20-732-989-5653", "22-888-883-2475", "27-333-779-5333",
      "29-531-319-7726", "26-776-223-5427", "19-997-929-2765",
      "25-575-731-2159", "27-714-618-2239", "19-585-173-1514",
      "25-342-269-3824", "22-941-606-7227", "34-457-910-7430",
      "10-566-341-4382", "30-943-141-5174", "22-424-990-1743",
      "14-993-368-5047", "15-901-460-2033", "23-410-801-1644",
      "10-109-430-5638", "28-454-124-5859", "20-492-863-1129",
      "23-762-328-7631", "24-196-343-6537", "33-108-680-4317",
      "18-404-707-6095", "33-408-548-6806", "30-495-591-5384",
      "29-264-864-8387", "16-624-307-4875", "24-637-803-7812",
      "31-700-242-6347", "22-181-313-6281", "19-572-730-8324",
      "15-919-192-7197", "32-435-825-7973", "32-802-156-1748",
      "19-556-695-9964", "10-272-126-1413", "24-979-584-7928",
      "21-285-410-4046", "23-125-871-9246", "28-766-714-9136",
      "33-645-447-3944", "25-655-714-7125", "34-718-798-7751",
      "32-546-203-4000", "19-678-843-9850", "15-252-941-6247",
      "12-869-161-3468", "10-544-967-2382", "11-379-392-2701",
      "25-336-316-9641", "15-856-649-3113", "18-509-453-8977",
      "27-379-135-4463", "22-895-319-1388", "24-939-734-5650",
      "12-479-479-6941", "13-801-392-5922", "22-897-966-6672",
      "19-245-153-1471", "30-436-285-7224", "24-522-194-4543",
      "32-850-421-3334", "12-379-344-7132", "12-953-532-5903",
      "30-933-714-8982", "27-357-139-7164", "16-375-385-5712",
      "10-886-494-4217", "13-146-810-5423", "30-320-481-3076",
      "26-400-912-7812", "25-465-180-9022", "12-878-466-6505",
      "18-763-990-8618", "14-127-261-7876", "12-437-842-6799",
      "13-526-239-6950", "31-483-489-6172", "15-874-471-4903",
      "22-771-691-7229", "11-136-651-8293", "22-855-455-1154",
      "23-625-369-6714", "14-938-708-4678", "21-439-958-7518",
      "19-589-784-1249", "23-827-724-6816", "26-844-679-1540",
      "10-933-819-2037", "10-425-565-3199", "16-988-776-4568",
      "13-265-738-4361", "12-594-534-9654", "11-422-328-1612",
      "22-202-667-4372", "14-209-883-5797", "17-706-779-2078",
      "15-940-929-4572", "13-803-156-2231", "16-594-569-6627",
      "20-501-816-7673", "22-814-669-9320", "34-717-350-9722",
      "19-899-463-4292", "23-121-746-7339", "24-348-437-3105",
      "24-500-946-3315", "15-915-758-7313", "10-452-398-2445",
      "33-511-587-8754", "11-100-917-5264", "29-992-318-6425",
      "19-537-180-2200", "12-905-464-3299", "18-765-936-2316",
      "17-945-916-9648", "21-476-142-5086", "25-518-232-9865",
      "20-753-609-6699", "26-783-803-1329", "27-332-891-1391",
      "31-508-509-6393", "33-487-459-1026", "29-562-904-5451",
      "10-349-498-1720", "23-300-708-7927", "24-623-803-8018",
      "22-119-576-7222", "10-724-445-8323", "21-100-538-9635",
      "33-869-990-3946", "22-157-321-7590", "29-627-844-1293",
      "29-958-573-1004", "29-745-875-1061", "28-560-449-7675",
      "15-483-251-8603", "14-485-139-5142", "25-542-662-1673",
      "31-152-357-9762", "32-838-393-6825", "27-125-968-3750",
      "12-391-316-1861", "25-849-760-2017", "10-813-916-8297",
      "34-527-524-9172", "32-829-961-2870", "29-639-437-3775",
      "10-918-863-8880", "30-627-947-8311", "29-941-553-8245",
      "15-455-954-2914", "14-546-329-6898", "14-664-604-8633",
      "22-989-463-6089", "14-792-232-1645", "23-921-332-7635",
      "22-974-772-2802", "12-893-735-6415", "18-539-933-5176",
      "33-687-917-3598", "10-470-740-2657", "18-148-790-2039",
      "24-266-486-1615", "11-256-718-6928", "14-405-229-6174",
      "10-749-928-5415", "30-473-948-7149", "26-428-220-2070",
      "29-436-660-4732", "12-602-807-5055", "34-261-243-2624",
      "28-113-574-4962", "11-572-281-8212", "28-202-962-8429",
      "33-460-986-9418", "17-283-610-6143", "21-247-588-5181",
      "33-408-194-5161", "11-537-225-3800", "18-887-394-2506",
      "13-862-722-3298", "20-646-819-6827", "10-403-137-1064",
      "31-977-971-6175", "15-262-535-3924", "17-494-757-5759",
      "26-638-159-5836", "23-272-700-1002", "32-902-625-1946",
      "27-218-645-5219", "27-951-935-6514", "26-876-956-1302",
      "32-730-275-2976", "31-389-986-4741", "20-973-622-6579",
      "31-716-397-1854", "18-676-152-4849", "23-149-373-9093",
      "22-364-780-5932", "19-790-843-5283", "12-115-571-7897",
      "22-132-906-1117", "15-221-463-3776", "15-736-809-3168",
      "14-535-551-6255", "25-725-599-1183", "21-553-425-9152",
      "20-134-926-5391", "21-683-368-2994", "26-593-941-5690",
      "28-450-764-4871", "31-502-683-3413", "13-692-286-8158",
      "16-469-554-5196", "18-733-553-2195", "27-960-306-5136",
      "21-508-779-7822", "18-588-456-4616", "27-169-221-8173",
      "12-278-154-5262", "20-582-119-3249", "25-602-810-8723",
      "18-759-877-1870", "31-946-641-1853", "28-449-227-3528",
      "18-470-380-2978", "15-370-179-6631", "20-376-345-3729",
      "18-791-577-7691", "33-855-960-2989", "27-511-101-1611",
      "20-871-886-9220", "21-756-109-1482", "21-314-290-3052",
      "15-215-652-3459", "17-266-334-8613", "10-451-459-9620",
      "30-120-992-2121", "20-890-161-8958", "19-146-399-4251",
      "29-757-642-3735", "19-499-258-2851", "21-448-313-4374",
      "12-869-221-1428", "23-496-475-9040", "26-400-312-6496",
      "31-915-292-9727", "17-802-131-7180", "15-325-285-5215",
      "34-750-735-1314", "29-818-620-9637", "33-683-418-9460",
      "18-290-794-6133", "14-909-417-8324", "32-207-600-8684",
      "31-277-349-9036", "25-391-998-4106", "32-605-226-2449",
      "10-333-463-4472", "33-764-123-9568", "28-485-984-7299",
      "31-927-711-6278", "25-894-843-9171", "26-350-231-6183",
      "14-432-882-6163", "20-774-197-6595", "20-176-839-1649",
      "31-724-234-4181", "20-405-710-1902", "31-367-294-4048",
      "29-729-692-6790", "29-699-930-2250", "22-806-885-5347",
      "22-866-942-1021", "15-646-384-2302", "17-159-499-3318",
      "12-378-899-7136", "31-831-702-3157", "18-399-482-6815",
      "31-334-391-6403", "32-324-225-2635", "28-164-765-7462",
      "25-711-934-6343", "27-336-955-4882", "25-766-175-4580",
      "34-931-911-6156", "12-234-721-9871", "19-881-259-2391",
      "14-368-827-9896", "16-604-758-5574", "32-206-732-5183",
      "11-128-186-5241", "22-880-206-7392", "13-528-469-6051",
      "34-103-353-4822", "26-307-423-8860", "18-644-507-8095",
      "32-885-298-6750", "31-214-739-2409", "11-720-869-9052",
      "17-408-450-8891", "32-194-697-1794", "20-777-225-9349",
      "16-824-312-3537", "30-401-424-6458", "22-412-216-1933",
      "24-630-988-3843", "15-356-145-6356", "24-116-214-4051",
      "33-461-439-5684", "21-583-715-8627", "30-789-716-6850",
      "12-938-579-7156", "30-197-936-4724", "10-257-957-3327",
      "26-983-192-5480", "11-709-582-2006", "13-807-542-3923",
      "18-898-994-6389", "20-830-875-6204", "10-392-200-8982",
      "18-313-585-9420", "32-503-721-8203", "30-644-540-9044",
      "32-953-419-6880", "24-858-762-2348", "19-832-924-7391",
      "21-517-852-3282", "34-440-798-1100", "26-598-565-1269",
      "32-236-817-2959", "32-182-662-9475", "30-331-754-7359",
      "32-330-618-9020", "26-191-682-8920", "14-568-471-9747",
      "11-336-453-4489", "12-270-756-2968", "22-720-237-1751",
      "25-754-809-7107", "29-393-445-2761", "13-254-242-3889",
      "31-236-665-8430", "17-948-135-2667", "22-471-341-5516",
      "13-319-420-5160", "29-797-132-6916", "18-864-953-3058",
      "24-637-724-1410", "30-741-794-9826", "20-487-747-8857",
      "12-269-807-3861", "34-103-942-4634", "29-213-663-3342",
      "12-887-115-9986", "12-204-803-1483", "10-828-178-5049",
      "19-766-409-6769", "27-869-223-7506", "29-721-479-1548",
      "27-608-883-2632", "14-975-169-9356", "18-670-628-8499",
      "18-457-394-2863", "24-249-588-1969", "28-409-365-6392",
      "14-131-930-7154", "14-756-259-6379", "20-141-903-5936",
      "24-200-701-8606", "19-717-739-3103", "29-311-833-9211",
      "23-188-767-6645", "20-330-305-8843", "16-229-473-7194",
      "11-968-244-9275", "21-661-875-1923", "24-860-751-6688",
      "33-500-965-3385", "20-543-260-5157", "25-108-989-8154",
      "20-746-804-1553", "25-538-604-9042", "29-587-244-2901",
      "30-904-936-4914", "18-524-487-2547", "31-155-275-3981",
      "14-355-801-7486", "30-615-967-7758", "10-254-891-7835",
      "28-278-515-1034", "26-367-212-1737", "32-890-210-4199",
      "20-825-400-1187", "10-788-256-6117", "26-370-660-6154",
      "30-117-472-8751", "18-185-307-2678", "30-716-117-6066",
      "13-572-474-7362", "15-789-973-6601", "14-664-771-9006",
      "26-202-315-9048", "28-280-785-7324", "32-462-274-7707",
      "17-548-151-7684", "14-281-851-2904", "26-405-743-5405",
      "13-673-633-4561", "22-191-580-2887", "32-299-871-1751",
      "14-364-661-8744", "28-379-869-1009", "32-185-876-3586",
      "21-709-519-4959", "21-659-745-8411", "18-794-312-9970",
      "21-839-103-4411", "10-251-221-9440", "33-468-642-3107",
      "22-778-955-6105", "19-313-452-6076", "33-786-129-3407",
      "19-316-348-3289", "28-518-320-7417", "25-522-912-6255",
      "11-742-434-6436", "34-549-333-8551", "21-699-526-9355",
      "30-415-666-7691", "16-302-171-7578", "30-786-518-4678",
      "14-650-555-5310", "13-902-876-1609", "12-521-364-1211",
      "24-445-165-9851", "15-881-433-2257", "14-500-764-3702",
      "14-882-141-9354", "10-386-173-3167", "18-692-669-1536",
      "17-866-269-1165", "19-509-608-4350", "34-741-256-6399",
      "22-604-782-7617", "11-900-587-2067", "28-832-851-4673",
      "24-359-633-2713", "25-306-342-4782", "12-824-451-8526",
      "13-727-588-7092", "30-930-620-7210", "12-742-408-2980",
      "30-372-895-4261", "13-444-583-3984", "19-690-614-5736",
      "26-617-707-6647", "34-945-256-3226", "13-832-768-3873",
      "34-329-328-2500", "34-973-735-5374", "20-818-485-8060",
      "23-473-283-1422", "24-698-342-2768", "31-659-617-1632",
      "22-594-567-9307", "34-152-721-6307", "30-410-174-2034",
      "26-809-582-2064", "24-502-746-4128", "15-253-270-5149",
      "24-742-587-6985", "26-725-573-7255", "21-124-963-7614",
      "24-750-627-7414", "10-203-771-2219", "28-750-346-1442",
      "29-424-835-1463", "22-374-932-9860", "25-493-734-3918",
      "13-533-256-9320", "34-409-591-4324", "34-837-161-2672",
      "17-693-294-2656", "31-966-407-1575", "22-517-223-6566",
      "33-506-204-7796", "34-259-484-2624", "15-130-485-4234",
      "31-579-682-9907", "25-765-244-1549", "21-150-179-4763",
      "33-581-399-6027", "20-339-347-9046", "19-316-212-9313",
      "15-658-234-7985", "21-638-815-3982", "33-396-634-9150",
      "22-923-551-9639", "13-970-299-8199", "28-560-833-2066",
      "20-821-905-5952", "27-538-338-3378", "23-647-279-5735",
      "13-153-492-9898", "33-623-834-3089", "11-290-301-2722",
      "20-941-614-6433", "15-642-801-1329", "24-518-294-8197",
      "24-524-279-4270", "19-573-345-3305", "25-116-108-3791",
      "20-571-787-3958", "23-207-256-7245", "33-476-768-7390",
      "17-415-957-9976", "17-687-303-1074", "31-373-307-4091",
      "22-920-576-6295", "20-305-428-9878", "27-945-826-8003",
      "11-353-524-1234", "18-140-389-1328", "28-560-351-6594",
      "12-154-975-6824", "15-493-800-1041", "20-744-779-7057",
      "26-350-110-5043", "32-528-594-1931", "30-763-866-5779",
      "14-904-963-2452", "31-872-435-1900", "28-701-221-9569",
      "26-340-733-2096", "28-393-594-5247", "15-307-682-9911",
      "19-913-651-7783", "20-502-685-6183", "34-956-232-6103",
      "33-360-732-3579", "28-950-527-8728", "13-486-903-2349",
      "11-916-210-6616", "30-631-606-4317", "11-109-274-1421",
      "23-969-619-1363", "30-918-883-1662", "15-656-712-5740",
      "25-242-146-4223", "13-264-253-1258", "21-124-833-5784",
      "29-574-552-4018", "23-104-975-7608", "17-801-385-5904",
      "23-964-365-7781", "29-992-959-9626", "27-358-301-5393",
      "30-193-707-6924", "32-462-328-6604", "25-801-622-7438",
      "20-232-617-7418", "28-575-379-5893", "17-492-673-8157",
      "33-563-510-6488", "23-959-476-7310", "29-869-316-1166",
      "24-620-497-1489", "22-972-150-2900", "27-398-963-9520",
      "27-806-173-2824", "16-695-982-9623", "27-641-565-1036",
      "32-418-900-6494", "20-962-576-3853", "25-267-778-1591",
      "18-788-299-9227", "13-693-138-5884", "21-450-191-9064",
      "29-444-890-8990", "23-185-747-9502", "29-865-304-6982",
      "21-978-977-8988", "33-558-545-3053", "32-561-640-4912",
      "34-953-819-7858", "13-580-581-6470", "33-291-909-3901",
      "13-523-516-9742", "18-294-992-6523", "18-377-181-4654",
      "10-775-919-7154", "10-217-180-5310", "19-339-404-7859",
      "16-713-144-2780", "22-458-624-2509", "22-320-701-5582",
      "26-285-488-6682", "15-767-155-6419", "24-529-300-1554",
      "21-901-381-6344", "21-667-401-3780", "32-358-270-1819",
      "31-898-640-7625", "20-715-510-2804", "25-624-816-9010",
      "30-323-797-7514", "31-295-601-1598", "17-306-898-9363",
      "11-242-612-1339", "27-773-818-3164", "14-533-796-5446",
      "19-433-305-7356", "22-139-990-1907", "27-270-833-4320",
      "31-624-875-9135", "32-542-134-6212", "11-697-824-4418",
      "25-629-292-9022", "21-941-208-2485", "25-859-663-3690",
      "13-119-903-3814", "10-209-317-6929", "23-640-395-7009",
      "31-831-635-9758", "27-558-375-8169", "28-749-743-6583",
      "30-309-437-9265", "20-918-593-1860", "27-805-486-5768",
      "27-688-787-7928", "31-433-694-1822", "17-619-730-9883",
      "33-681-334-4499", "26-677-746-7145", "20-959-383-4792",
      "17-107-228-8125", "31-151-251-1931", "33-873-120-5388",
      "27-452-251-2941", "34-969-612-1458", "32-827-813-3340",
      "13-443-688-6724", "12-590-121-9328", "17-581-575-4538",
      "10-852-397-3642", "34-478-555-5955", "13-839-360-1866",
      "23-171-834-8997", "33-660-953-7656", "13-392-503-9207",
      "21-424-586-6295", "30-151-388-7118", "13-393-444-1533",
      "27-153-195-4457", "17-980-394-5868", "24-133-117-1577",
      "18-807-487-1074", "27-360-496-5041", "34-941-824-8063",
      "22-901-280-1023", "17-961-583-4658", "27-350-836-5521",
      "15-230-827-4758", "15-464-411-8342", "10-891-555-7734",
      "26-609-226-4269", "10-932-794-2009", "26-621-638-1459",
      "16-407-756-8079", "17-420-484-5959", "26-203-849-3685",
      "17-573-775-8796", "22-674-694-9039", "29-452-962-5934",
      "17-202-113-4814", "28-987-505-1842", "34-329-123-7678",
      "34-559-605-2237", "27-197-562-5547", "14-892-461-5341",
      "19-906-669-4354", "30-326-598-2437", "14-931-281-5631",
      "11-527-949-4092", "34-947-154-7032", "21-248-166-9549",
      "20-416-910-7075", "13-802-978-9538", "24-506-574-8552",
      "29-676-227-6356", "13-273-527-9609", "15-200-872-4790"};
  std::vector<double> c_acctbal = {
      711.56,  121.65,  7498.12, 2866.83, 794.47,  7638.57, 9561.95, 6819.74,
      8324.07, 2753.54, -272.6,  3396.49, 3857.34, 5266.3,  2788.52, 4681.03,
      6.34,    5494.43, 8914.71, 7603.4,  1428.25, 591.98,  3332.02, 9255.67,
      7133.7,  5182.05, 5679.84, 1007.18, 7618.27, 9321.01, 5236.89, 3471.53,
      -78.56,  8589.7,  1228.24, 4987.27, -917.75, 6345.11, 6264.31, 1335.3,
      270.95,  8727.01, 9904.28, 7315.94, 9983.38, 5744.59, 274.58,  3792.5,
      4573.94, 4266.13, 855.87,  5630.28, 4113.64, 868.9,   4572.11, 6530.86,
      4151.93, 6478.46, 3458.6,  2741.87, 1536.24, 595.61,  9331.13, -646.64,
      8795.16, 242.77,  8166.59, 6853.37, 1709.28, 4867.52, -611.19, -362.86,
      4288.5,  2764.43, 6684.1,  5745.33, 1738.87, 7136.97, 5121.28, 7383.53,
      2023.71, 9468.34, 6463.51, 5174.71, 3386.64, 3306.32, 6327.54, 8031.44,
      1530.76, 7354.23, 4643.14, 1182.91, 2182.52, 5500.11, 5327.38, 6323.92,
      2164.48, -551.37, 4088.65, 9889.89, 7470.96, 8462.17, 2757.45, -588.38,
      9091.82, 3288.42, 2514.15, 2259.38, -716.1,  7462.99, 6505.26, 2953.35,
      2912.0,  1027.46, 7508.92, 8403.99, 3950.83, 3582.37, 3930.35, 363.75,
      6428.32, 7865.46, 5897.83, 1842.49, -234.12, 1001.39, 9280.71, -986.96,
      9127.27, 5073.58, 8595.53, 162.57,  2314.67, 4608.9,  8732.91, -842.39,
      7838.3,  430.59,  7897.78, 9963.15, 6706.14, 2209.81, 2186.5,  6417.31,
      9748.93, 3328.68, 8071.4,  2135.6,  8959.65, 3849.48, 5187.02, 1215.18,
      5454.26, 4695.12, 5902.85, 9302.95, 9768.73, 6160.95, 2060.06, 4363.17,
      3714.06, 6268.99, 2948.61, 208.45,  3349.92, 2042.21, 1468.09, -808.56,
      4483.83, 7687.89, 2379.91, 1134.4,  845.84,  1944.73, 1975.35, -375.76,
      7457.5,  2272.5,  -43.08,  -92.58,  3929.96, 4810.22, 4419.89, 170.46,
      2788.76, 8737.5,  -774.22, 9533.37, -594.05, 1657.46, 2945.16, 8239.96,
      8024.55, 6696.49, 4873.91, 7760.33, 9860.22, 3824.76, 7654.31, 9967.6,
      4614.4,  2237.64, 7960.63, -627.76, 7161.52, -274.79, -439.98, 6239.89,
      8873.46, 7250.14, 4198.72, 957.58,  9987.71, 1526.59, 3379.2,  -776.08,
      378.33,  9541.19, 9858.57, 9131.64, 1609.39, 8893.76, 7476.2,  8465.15,
      8893.2,  9008.61, 1808.23, 6868.12, 7568.07, 1682.83, 283.55,  554.71,
      3998.24, 8383.51, 754.41,  5384.59, -160.02, 3482.32, 5398.77, 7139.68,
      6569.34, 1975.41, 620.73,  2506.38, 3720.15, 9584.96, 8495.92, 8908.35,
      -234.01, 2869.97, 9585.32, 3561.74, 9139.52, 1915.35, 3196.07, 1299.92,
      -339.85, 6022.27, 3335.29, 9196.11, 7094.22, 1561.8,  1162.03, 3195.83,
      8275.8,  5481.0,  3166.94, 6821.01, 7667.35, 9192.5,  1490.35, -746.03,
      -675.05, 4425.42, 5067.31, 2292.67, 8876.1,  7621.56, 9663.23, 3952.84,
      4361.7,  1125.45, 4450.03, 593.52,  7276.72, -109.73, 1734.18, 5339.43,
      -215.75, 1811.35, 4261.68, 2975.43, -43.79,  -994.79, 9497.89, 8081.52,
      7096.32, 3812.84, 5380.5,  8084.92, 9305.05, 1107.42, 9339.57, 9217.55,
      4356.59, 3268.01, 346.59,  4150.76, 8824.78, 3186.57, 6589.5,  -178.84,
      6115.81, 2394.92, 348.58,  4571.78, 956.88,  9149.98, 1834.36, 6082.74,
      7718.77, 4489.98, 1137.67, 806.59,  2377.34, 1906.52, 8762.16, 6709.9,
      -651.91, 8244.73, 170.27,  -267.09, 8018.89, -405.91, 6837.46, 9241.49,
      -270.59, 4092.49, 8438.07, 4667.12, 8247.11, 7186.74, 5521.36, -544.95,
      1936.77, 238.14,  7348.92, 3310.49, -565.35, 19.31,   3419.54, 6257.88,
      3199.03, 7095.95, 8727.9,  2934.06, 8747.36, -44.66,  6375.23, 6542.83,
      7451.84, 6149.01, -573.86, 32.24,   737.03,  -729.74, 9108.65, 84.72,
      2881.06, 8982.79, 7789.14, -921.91, 2354.06, 6718.78, 5562.22, 4231.45,
      1043.72, 5718.05, 5348.11, 2755.46, 9931.71, 6269.42, -849.44, -614.3,
      2457.09, 232.01,  3404.23, 1938.05, -307.61, 8862.18, 4801.3,  8492.33,
      3593.57, 5200.96, 4582.28, 1433.5,  709.46,  8865.61, 7358.53, -98.46,
      4146.43, 2106.67, 6693.36, 7408.73, 7519.14, 4286.94, 9537.08, 6825.37,
      3969.86, 4349.27, 1209.32, 6044.02, 5817.9,  527.78,  2317.93, 4365.28,
      6187.73, 1211.39, 7786.69, 1999.35, 7073.17, -272.14, 95.79,   1866.42,
      5824.88, 7818.25, 4376.8,  1952.36, 9247.21, 7905.17, 2273.5,  5715.64,
      8746.23, 2940.46, 6217.46, 5896.87, 7760.52, 2131.13, -61.29,  1809.04,
      9451.84, 4157.0,  3726.22, 1505.27, 8018.81, 9225.6,  7665.98, 8117.27,
      3001.94, 5544.42, 2110.59, 6633.7,  5678.18, 6134.4,  6860.34, 8815.78,
      5867.61, -38.42,  1207.97, 5222.83, 9177.63, 4522.6,  -654.5,  8730.85,
      8432.74, 3168.41, 9398.51, 9834.19, 6343.64, 3597.53, 5716.9,  7929.9,
      -202.22, 9165.47, 9043.55, 5973.1,  1836.61, -210.4,  3653.64, 2750.71,
      7157.21, 4333.37, 8877.2,  4245.0,  8695.45, 7487.4,  9749.37, -275.58,
      8255.83, -213.85, 785.37,  8635.18, 6582.04, 6295.47, 7997.81, 8174.82,
      2191.59, 3945.64, 4293.76, 3300.82, 1909.35, 1378.67, 3213.66, 0.51,
      6557.51, 1179.85, 5727.0,  1685.9,  7885.5,  1572.48, 4571.31, 3937.58,
      955.37,  5840.97, 3225.07, 4768.96, 3959.71, 9871.66, 9074.45, 8315.09,
      5830.69, 6358.46, -275.73, 5706.19, 3931.68, 705.93,  4429.81, 1802.5,
      9647.58, 4990.92, 5342.82, 1725.68, 5432.77, 6520.97, 2912.8,  3342.75,
      2614.79, -303.95, 4390.33, 9195.77, 1295.54, 3109.96, 6089.13, 4974.68,
      7505.33, 3116.5,  6058.08, 90.45,   91.53,   7270.82, -334.89, 1353.24,
      4804.57, 8395.57, 5486.52, 7944.22, 9559.04, 1912.23, 5872.94, 1469.59,
      2323.45, 9234.5,  3231.71, 6307.59, 2688.88, 1928.1,  8475.17, 1317.56,
      -795.23, 8480.87, 8993.23, 7252.65, 2333.96, 9787.56, 3652.29, 2091.63,
      7059.15, 6181.23, 1924.96, -181.63, 3242.1,  4879.55, 3686.07, 8825.71,
      7820.26, 5134.35, 7077.79, 483.89,  1647.05, 3993.54, 6344.66, 9712.75,
      233.51,  6518.42, 4177.17, 1722.88, 2443.52, 3244.78, 6004.52, 2003.44,
      9768.21, 8404.9,  8161.13, 3195.96, -549.73, 9676.98, 4038.45, 2256.36,
      3651.06, 3374.92, 4272.43, 7669.16, 6679.75, 9630.24, -482.48, 6898.65,
      3625.93, -932.38, 2336.99, 5795.15, 3164.28, 5974.11, 7887.6,  3907.11,
      5744.89, 5447.12, 5826.68, 4954.25, 5100.77, 3649.05, 2603.0,  -487.92,
      3385.52, 6397.58, 8216.79, 3660.47, 7511.17, 2258.4,  4899.15, 3025.84,
      339.49,  5684.01, 5184.7,  6183.15, 1146.49, 6074.42, -132.97, 7029.24,
      9442.55, 2086.91, 4716.31, -919.65, 7307.55, 1067.04, 1724.68, -390.09,
      8729.97, 4716.68, 5297.68, 2110.3,  1735.44, 4517.33, 9698.21, 8878.22,
      -616.79, 4538.54, 3288.76, 8184.21, 6019.2,  6738.93, 3227.87, 7778.95,
      3942.58, 7889.64, 5295.26, 5527.61, 5582.63, 6302.93, 1394.44, 4366.23,
      235.53,  7420.6,  9120.93, 8545.9,  2039.84, 5503.36, 4999.31, 3354.47,
      1481.24, 103.45,  9566.15, 276.71,  6577.21, 2222.65, 9126.54, 3778.97,
      8121.84, 2894.22, -809.22, 4367.53, 148.98,  4782.05, 3998.42, 441.44,
      3199.0,  6496.08, 2619.52, 2297.33, -867.94, 7412.12, 9591.51, 8667.09,
      3829.03, 2438.1,  85.05,   8364.99, 8510.94, 8438.4,  -774.47, 5357.32,
      3420.64, 2724.8,  738.57,  3035.29, 5030.24, 6253.81, 807.37,  4349.73,
      8947.26, 4718.23, 9311.17, 4830.51, 4351.09, 9750.71, 293.88,  9114.68,
      2501.74, 2734.95, 6344.18, 1733.76, 9195.41, 6381.24, 8450.37, 2458.81,
      7115.14, 1164.46, 67.95,   6959.09, 7491.42, 269.9,   2130.98, 8363.66,
      8114.44, -566.86, 7631.94, 8116.99, 9334.82, 6352.14, 3477.59, 2883.24,
      1525.96, 3764.9,  2650.27, 2061.45, 5683.33, 4677.55, 7647.09, 9618.84,
      5950.86, 2066.79, 7461.74, 7555.16, 4578.24, -506.37, 1376.67, 2669.01,
      9097.52, 52.43,   -902.48, 9874.12, 6403.62, -326.32, 2436.32, 3170.47,
      108.14,  400.03,  212.16,  -330.69, 6038.6,  2724.98, 3694.81, 1672.46,
      2072.99, 1709.5,  8443.18, 2584.23, 3063.11, -391.13, 2263.25, 9443.39,
      5207.32, 1377.52, 6003.09, 3.43,    511.69,  6859.28, 1929.89, 5561.93,
      -594.23, 9632.77, 9010.02, 3428.67, 5673.47, 4011.18, 5841.33, 9239.32,
      7297.64, -574.39, 2152.05, -614.28, 2691.42, 736.47,  738.79,  6840.29,
      1809.01, 8938.14, 5411.2,  7059.68, 4086.56, 7775.65, 3401.49, -201.49,
      -526.14, -976.25, 2106.81, 9184.72, 2701.29, 1605.76, 2924.78, 6799.0,
      884.2,   8635.49, 675.73,  2954.9,  6898.89, 7650.73, 4822.08, 5685.59,
      9670.64, 7576.55, 1144.23, 1098.98, -444.73, 3393.86, 3550.49, 6988.55,
      7537.16, -829.37, 6737.18, 6836.89, -336.8,  2338.92, 5274.52, 8932.76,
      3016.38, 6265.88, 5680.23, 7616.48, 1228.06, 1970.76, -395.89, -858.61,
      -797.38, 5391.74, -949.28, 4367.63, 1755.33, 8781.53, 2235.2,  -77.63,
      2141.71, 1650.12, 479.96,  1601.6,  -959.94, 1194.33, 7009.42, 6358.04,
      3635.35, 3329.21, 6032.18, 4799.98, 8250.87, 4483.42, 904.43,  7659.72,
      1999.42, 8137.24, 8605.53, 3195.39, 938.35,  5858.48, 509.23,  9562.82,
      -600.73, -613.45, 5751.31, 3215.96, 5565.58, 5794.69, 6364.6,  3861.36,
      6935.16, 1230.79, 3776.53, 130.59,  3679.65, -155.06, 9774.97, 990.58,
      3651.09, 3869.25, 7462.2,  4212.53, 1939.39, 274.5,   2417.65, 8330.7,
      4079.18, 4787.2,  2409.69, 6553.37, 8541.16, -592.69, 2531.25, 3650.9,
      668.51,  2584.52, 8059.51, 253.59,  2990.18, 5898.17, 7541.05, 9454.78,
      9615.39, 2990.73, 4092.24, 4346.9,  5340.67, 9609.77, 7499.47, 3710.14,
      6292.06, 5740.0,  138.31,  1587.14, 9076.68, 1791.65, 3266.14, 1932.59,
      6963.68, 7557.0,  2557.49, 4756.58, 4768.8,  1283.26, 5710.41, 8921.97,
      8601.63, 3623.6,  3914.88, 4453.46, 3229.18, 7826.1,  4364.06, 7772.85,
      311.0,   -50.51,  7055.13, 4586.33, 3383.26, 1437.55, 2902.95, 2811.97,
      2701.21, 178.73,  9850.64, 7746.97, 5453.74, 6988.49, 6533.53, 5027.75,
      8421.87, 7461.27, -341.79, 6450.78, 367.03,  6679.2,  403.89,  -881.7,
      7140.81, 3699.76, 7894.0,  1512.46, 7790.94, 7447.99, 7347.9,  8191.74,
      594.5,   1652.78, 1188.94, 4422.45, -951.53, -392.84, 6392.0,  2357.54,
      -913.7,  8341.71, 2114.53, 6914.87, 1286.76, 9605.83, 7188.35, -425.09,
      3363.46, 9699.28, 4946.21, 1915.53, 6252.18, 6359.27, 2226.8,  1853.64,
      81.06,   7349.82, 7499.36, 1766.23, 4936.25, -509.92, 7618.54, 2860.71,
      7993.98, 9849.87, 5847.76, 7291.3,  2942.19, 2311.0,  8918.99, 2583.91,
      8747.99, -517.65, 9776.39, 2837.96, -473.85, 8844.27, 639.93,  6287.12,
      -377.11, 6807.55, 1547.5,  2840.59, -258.77, 4709.92, 1663.28, 1666.07,
      4663.41, 949.68,  9153.84, 737.4,   5465.29, 3160.23, 4033.56, 7979.48,
      8217.23, 122.67,  2714.5,  3509.35, 8581.78, 70.93,   2135.91, 3267.19,
      8647.42, 3247.92, 3847.29, 1416.75, 5275.88, 9726.83, 5878.21, 2098.62,
      3429.95, 5212.43, -710.53, 2004.15, -273.96, 2544.49, 6221.26, 3687.37,
      8651.87, 1009.22, 8990.07, 9189.75, -842.72, 2369.01, 4878.1,  1230.47,
      9491.46, 9977.62, 7961.62, 4997.35, 3387.22, 2041.65, 2892.21, 9314.59,
      7392.3,  6446.83, -178.52, 592.6,   2829.07, 4130.18, 3971.65, 1543.64,
      3942.11, 45.21,   9786.36, 5512.73, 8427.55, 3905.97, 8631.35, 8123.99,
      6020.02, 9519.36, 6019.1,  4962.12, 5335.36, 8458.26, 3061.78, -723.49,
      4210.15, 6035.44, 4604.83, 6319.21, 0.97,    3273.08, 8655.98, 4189.04,
      3249.25, 4204.36, 7734.64, 7129.84, 6287.79, -117.31, 6354.89, 5680.15,
      6244.03, 1498.46, 3510.25, 1799.67, 6013.09, 3081.79, 5553.75, 4976.24,
      591.31,  3139.71, 90.22,   7341.35, 8177.33, 507.26,  9510.87, 6194.65,
      7503.3,  2070.73, 7658.97, 420.97,  182.59,  8798.96, 9207.16, 5827.59,
      9281.72, 4966.58, 3336.25, 3367.36, 9180.5,  8814.39, 4455.76, 9032.89,
      2913.52, 4466.3,  -932.96, 3698.86, 3798.28, 2743.63, 9088.54, 3231.33,
      -17.1,   7582.29, 9621.49, 6378.67, 9261.05, 9593.35, 6503.35, 3765.05,
      5165.39, 702.73,  5787.69, 9777.19, 5390.34, 8437.76, -556.05, 2426.52,
      3551.21, 8137.66, 4723.37, 7736.03, 8555.12, 2935.31, 7795.87, 2155.06,
      6019.32, 8801.73, 774.23,  8429.33, 816.5,   3883.18, -413.03, 8124.15,
      8634.92, 2135.92, 3335.72, 5392.3,  8328.12, 4787.85, 2326.68, 8482.51,
      3649.49, -982.32, -982.05, 3600.95, 8156.62, 4299.22, 6936.72, 5439.44,
      8654.56, 2276.15, 6271.38, -942.8,  3196.66, 260.71,  1696.95, 6539.15,
      448.49,  780.05,  7267.76, 3279.84, 1222.21, 2676.06, 6487.71, 5012.07,
      8810.83, -301.75, 8353.0,  4991.59, 5579.81, 2840.36, 6975.9,  3959.28,
      2653.53, 1877.05, 8616.12, 5152.42, 2659.68, 6170.06, 1209.37, 6865.14,
      1499.56, 126.97,  8972.46, -761.7,  -52.35,  9038.43, 7915.06, 3419.66,
      8182.42, 8998.82, 2222.71, -911.4,  3061.58, 6906.08, 7461.69, 6603.43,
      2925.52, 8108.42, 8227.37, 5509.11, 2565.67, -808.13, 753.62,  3034.69,
      6074.01, 3903.54, 808.39,  -370.44, 8966.63, 197.9,   2020.15, 4548.46,
      4900.66, 6464.77, 4344.52, 9290.53, -922.69, 204.84,  8713.24, 9459.5,
      889.11,  3218.33, 1447.84, -158.39, 8925.08, 5812.93, 4910.48, 6407.13,
      3589.49, 2621.71, 6006.81, 7548.88, 9108.61, -468.49, 0.97,    3264.99,
      4645.91, 3893.14, 2005.02, 3323.04, 1330.85, 2485.71, 8341.67, 1490.21,
      7882.44, 5139.0,  8167.5,  280.29,  762.69,  1520.34, 8303.09, 2113.32,
      8593.83, 4524.45, 8476.43, 459.22,  4967.24, 3339.51, 3106.0,  5570.69,
      3666.51, -897.04, 2351.1,  927.39,  8627.9,  5149.23, 4069.82, 1422.57,
      4128.86, 3718.92, -112.46, -181.69, 2207.81, 1634.7,  5420.32, 6376.18,
      498.77,  9802.04, 4943.58, 1796.09, 909.84,  -411.43, 2011.11, 6761.52,
      8839.15, 2675.73, 1008.26, 3723.53, 367.82,  8898.67, 2092.61, 1534.38,
      2326.75, 9643.87, 8541.87, 291.44,  1111.02, 3931.31, 5510.28, 249.82,
      5672.05, 2233.1,  8733.39, 7149.43, 5466.83, 7004.9,  7352.14, 2432.73,
      8908.63, 4396.25, 9782.34, 3828.46, 3987.39, 2023.59, 7424.99, 5920.09,
      1959.17, 2716.95, 772.14,  6368.38, 1387.83, 3136.15, 6252.12, 5348.4,
      7543.01, 9359.01, 5912.72, -932.09, 7292.93, 8389.5,  2411.69, 7207.7,
      5814.72, 1965.38, 8136.53, 7703.84, 6444.82, -920.4,  5805.81, 6314.25,
      4605.87, 1851.63, -729.09, 9158.91, 8839.32, 5436.81, 8487.6,  1236.36,
      9465.15, 7917.9,  7141.87, -501.37, 8367.94, 2981.48, 2718.02, 7756.35,
      9051.75, 857.7,   3274.3,  7086.97, 662.67,  3366.61, 7591.9,  6123.69,
      2873.49, 2716.8,  9270.88, 9680.51, 8460.48, 7305.88, 6039.64, 9306.2,
      9365.93, 1268.69, 2857.19, 3826.52, 4329.98, 7033.49, 3872.86, 2168.61,
      2796.93, 2961.79, 1820.28, 409.72,  9103.33, 9701.54, 9793.29, 876.02,
      3204.67, 2930.53, 4409.7,  4883.17, 9412.02, 5859.97, 3589.16, 7929.51,
      4389.66, 8997.6,  3739.82, -875.17, 7014.12, 8292.21, 6227.55, -496.49,
      2449.57, 5810.56, 9128.69, 6910.79};
  std::vector<std::string> c_mktsegment = {
      "BUILDING",   "AUTOMOBILE", "AUTOMOBILE", "MACHINERY",  "HOUSEHOLD",
      "AUTOMOBILE", "AUTOMOBILE", "BUILDING",   "FURNITURE",  "HOUSEHOLD",
      "BUILDING",   "HOUSEHOLD",  "BUILDING",   "FURNITURE",  "HOUSEHOLD",
      "FURNITURE",  "AUTOMOBILE", "BUILDING",   "HOUSEHOLD",  "FURNITURE",
      "MACHINERY",  "MACHINERY",  "HOUSEHOLD",  "MACHINERY",  "FURNITURE",
      "AUTOMOBILE", "BUILDING",   "FURNITURE",  "FURNITURE",  "BUILDING",
      "HOUSEHOLD",  "BUILDING",   "AUTOMOBILE", "HOUSEHOLD",  "HOUSEHOLD",
      "BUILDING",   "FURNITURE",  "HOUSEHOLD",  "AUTOMOBILE", "BUILDING",
      "HOUSEHOLD",  "BUILDING",   "MACHINERY",  "AUTOMOBILE", "AUTOMOBILE",
      "AUTOMOBILE", "BUILDING",   "BUILDING",   "FURNITURE",  "MACHINERY",
      "FURNITURE",  "HOUSEHOLD",  "HOUSEHOLD",  "AUTOMOBILE", "MACHINERY",
      "FURNITURE",  "AUTOMOBILE", "HOUSEHOLD",  "MACHINERY",  "MACHINERY",
      "FURNITURE",  "MACHINERY",  "AUTOMOBILE", "BUILDING",   "AUTOMOBILE",
      "HOUSEHOLD",  "MACHINERY",  "HOUSEHOLD",  "HOUSEHOLD",  "FURNITURE",
      "HOUSEHOLD",  "FURNITURE",  "BUILDING",   "MACHINERY",  "AUTOMOBILE",
      "FURNITURE",  "BUILDING",   "FURNITURE",  "MACHINERY",  "FURNITURE",
      "BUILDING",   "AUTOMOBILE", "BUILDING",   "FURNITURE",  "FURNITURE",
      "HOUSEHOLD",  "FURNITURE",  "AUTOMOBILE", "FURNITURE",  "BUILDING",
      "AUTOMOBILE", "MACHINERY",  "MACHINERY",  "HOUSEHOLD",  "MACHINERY",
      "AUTOMOBILE", "AUTOMOBILE", "BUILDING",   "HOUSEHOLD",  "FURNITURE",
      "MACHINERY",  "BUILDING",   "BUILDING",   "FURNITURE",  "MACHINERY",
      "MACHINERY",  "AUTOMOBILE", "BUILDING",   "BUILDING",   "AUTOMOBILE",
      "MACHINERY",  "FURNITURE",  "BUILDING",   "FURNITURE",  "HOUSEHOLD",
      "BUILDING",   "FURNITURE",  "AUTOMOBILE", "FURNITURE",  "MACHINERY",
      "BUILDING",   "HOUSEHOLD",  "BUILDING",   "AUTOMOBILE", "FURNITURE",
      "HOUSEHOLD",  "MACHINERY",  "HOUSEHOLD",  "HOUSEHOLD",  "HOUSEHOLD",
      "HOUSEHOLD",  "HOUSEHOLD",  "AUTOMOBILE", "BUILDING",   "FURNITURE",
      "FURNITURE",  "HOUSEHOLD",  "MACHINERY",  "MACHINERY",  "MACHINERY",
      "FURNITURE",  "AUTOMOBILE", "MACHINERY",  "MACHINERY",  "HOUSEHOLD",
      "FURNITURE",  "AUTOMOBILE", "HOUSEHOLD",  "AUTOMOBILE", "MACHINERY",
      "HOUSEHOLD",  "BUILDING",   "HOUSEHOLD",  "FURNITURE",  "AUTOMOBILE",
      "AUTOMOBILE", "BUILDING",   "AUTOMOBILE", "HOUSEHOLD",  "MACHINERY",
      "MACHINERY",  "MACHINERY",  "FURNITURE",  "HOUSEHOLD",  "HOUSEHOLD",
      "FURNITURE",  "AUTOMOBILE", "FURNITURE",  "FURNITURE",  "BUILDING",
      "MACHINERY",  "MACHINERY",  "BUILDING",   "FURNITURE",  "FURNITURE",
      "FURNITURE",  "BUILDING",   "FURNITURE",  "MACHINERY",  "FURNITURE",
      "FURNITURE",  "AUTOMOBILE", "HOUSEHOLD",  "AUTOMOBILE", "BUILDING",
      "HOUSEHOLD",  "FURNITURE",  "BUILDING",   "MACHINERY",  "AUTOMOBILE",
      "BUILDING",   "MACHINERY",  "MACHINERY",  "HOUSEHOLD",  "AUTOMOBILE",
      "FURNITURE",  "AUTOMOBILE", "AUTOMOBILE", "FURNITURE",  "BUILDING",
      "MACHINERY",  "AUTOMOBILE", "MACHINERY",  "BUILDING",   "BUILDING",
      "AUTOMOBILE", "AUTOMOBILE", "MACHINERY",  "FURNITURE",  "HOUSEHOLD",
      "BUILDING",   "BUILDING",   "HOUSEHOLD",  "MACHINERY",  "FURNITURE",
      "FURNITURE",  "AUTOMOBILE", "MACHINERY",  "AUTOMOBILE", "BUILDING",
      "BUILDING",   "BUILDING",   "BUILDING",   "BUILDING",   "AUTOMOBILE",
      "AUTOMOBILE", "MACHINERY",  "FURNITURE",  "BUILDING",   "MACHINERY",
      "BUILDING",   "HOUSEHOLD",  "FURNITURE",  "AUTOMOBILE", "AUTOMOBILE",
      "AUTOMOBILE", "HOUSEHOLD",  "HOUSEHOLD",  "FURNITURE",  "MACHINERY",
      "AUTOMOBILE", "MACHINERY",  "AUTOMOBILE", "HOUSEHOLD",  "MACHINERY",
      "AUTOMOBILE", "HOUSEHOLD",  "FURNITURE",  "MACHINERY",  "FURNITURE",
      "HOUSEHOLD",  "FURNITURE",  "AUTOMOBILE", "MACHINERY",  "BUILDING",
      "HOUSEHOLD",  "AUTOMOBILE", "MACHINERY",  "HOUSEHOLD",  "MACHINERY",
      "AUTOMOBILE", "AUTOMOBILE", "FURNITURE",  "MACHINERY",  "MACHINERY",
      "HOUSEHOLD",  "AUTOMOBILE", "MACHINERY",  "MACHINERY",  "AUTOMOBILE",
      "MACHINERY",  "MACHINERY",  "FURNITURE",  "FURNITURE",  "AUTOMOBILE",
      "AUTOMOBILE", "BUILDING",   "BUILDING",   "AUTOMOBILE", "BUILDING",
      "BUILDING",   "HOUSEHOLD",  "AUTOMOBILE", "AUTOMOBILE", "FURNITURE",
      "HOUSEHOLD",  "MACHINERY",  "HOUSEHOLD",  "AUTOMOBILE", "MACHINERY",
      "HOUSEHOLD",  "HOUSEHOLD",  "MACHINERY",  "BUILDING",   "HOUSEHOLD",
      "BUILDING",   "HOUSEHOLD",  "BUILDING",   "HOUSEHOLD",  "AUTOMOBILE",
      "HOUSEHOLD",  "MACHINERY",  "AUTOMOBILE", "MACHINERY",  "FURNITURE",
      "AUTOMOBILE", "FURNITURE",  "HOUSEHOLD",  "FURNITURE",  "FURNITURE",
      "AUTOMOBILE", "AUTOMOBILE", "HOUSEHOLD",  "MACHINERY",  "FURNITURE",
      "MACHINERY",  "HOUSEHOLD",  "HOUSEHOLD",  "FURNITURE",  "MACHINERY",
      "FURNITURE",  "HOUSEHOLD",  "AUTOMOBILE", "FURNITURE",  "HOUSEHOLD",
      "HOUSEHOLD",  "MACHINERY",  "BUILDING",   "BUILDING",   "MACHINERY",
      "AUTOMOBILE", "HOUSEHOLD",  "AUTOMOBILE", "BUILDING",   "HOUSEHOLD",
      "AUTOMOBILE", "MACHINERY",  "FURNITURE",  "HOUSEHOLD",  "BUILDING",
      "FURNITURE",  "AUTOMOBILE", "HOUSEHOLD",  "FURNITURE",  "AUTOMOBILE",
      "FURNITURE",  "BUILDING",   "HOUSEHOLD",  "BUILDING",   "BUILDING",
      "AUTOMOBILE", "HOUSEHOLD",  "BUILDING",   "BUILDING",   "FURNITURE",
      "FURNITURE",  "AUTOMOBILE", "MACHINERY",  "FURNITURE",  "FURNITURE",
      "BUILDING",   "AUTOMOBILE", "HOUSEHOLD",  "HOUSEHOLD",  "HOUSEHOLD",
      "MACHINERY",  "HOUSEHOLD",  "MACHINERY",  "FURNITURE",  "FURNITURE",
      "AUTOMOBILE", "MACHINERY",  "MACHINERY",  "AUTOMOBILE", "HOUSEHOLD",
      "AUTOMOBILE", "MACHINERY",  "BUILDING",   "AUTOMOBILE", "BUILDING",
      "BUILDING",   "AUTOMOBILE", "MACHINERY",  "HOUSEHOLD",  "AUTOMOBILE",
      "BUILDING",   "HOUSEHOLD",  "HOUSEHOLD",  "AUTOMOBILE", "HOUSEHOLD",
      "HOUSEHOLD",  "BUILDING",   "FURNITURE",  "MACHINERY",  "HOUSEHOLD",
      "BUILDING",   "FURNITURE",  "HOUSEHOLD",  "BUILDING",   "BUILDING",
      "BUILDING",   "AUTOMOBILE", "HOUSEHOLD",  "BUILDING",   "MACHINERY",
      "FURNITURE",  "MACHINERY",  "BUILDING",   "FURNITURE",  "BUILDING",
      "HOUSEHOLD",  "BUILDING",   "FURNITURE",  "AUTOMOBILE", "FURNITURE",
      "MACHINERY",  "BUILDING",   "FURNITURE",  "BUILDING",   "BUILDING",
      "FURNITURE",  "HOUSEHOLD",  "BUILDING",   "HOUSEHOLD",  "HOUSEHOLD",
      "HOUSEHOLD",  "MACHINERY",  "BUILDING",   "FURNITURE",  "BUILDING",
      "HOUSEHOLD",  "BUILDING",   "FURNITURE",  "MACHINERY",  "MACHINERY",
      "FURNITURE",  "AUTOMOBILE", "MACHINERY",  "BUILDING",   "MACHINERY",
      "HOUSEHOLD",  "FURNITURE",  "FURNITURE",  "HOUSEHOLD",  "FURNITURE",
      "FURNITURE",  "HOUSEHOLD",  "BUILDING",   "MACHINERY",  "HOUSEHOLD",
      "HOUSEHOLD",  "BUILDING",   "HOUSEHOLD",  "AUTOMOBILE", "BUILDING",
      "FURNITURE",  "FURNITURE",  "BUILDING",   "MACHINERY",  "FURNITURE",
      "AUTOMOBILE", "HOUSEHOLD",  "HOUSEHOLD",  "AUTOMOBILE", "FURNITURE",
      "MACHINERY",  "MACHINERY",  "FURNITURE",  "BUILDING",   "HOUSEHOLD",
      "FURNITURE",  "MACHINERY",  "HOUSEHOLD",  "MACHINERY",  "BUILDING",
      "BUILDING",   "AUTOMOBILE", "BUILDING",   "AUTOMOBILE", "FURNITURE",
      "FURNITURE",  "HOUSEHOLD",  "MACHINERY",  "BUILDING",   "MACHINERY",
      "AUTOMOBILE", "AUTOMOBILE", "AUTOMOBILE", "AUTOMOBILE", "FURNITURE",
      "AUTOMOBILE", "AUTOMOBILE", "MACHINERY",  "FURNITURE",  "BUILDING",
      "MACHINERY",  "BUILDING",   "BUILDING",   "HOUSEHOLD",  "AUTOMOBILE",
      "FURNITURE",  "HOUSEHOLD",  "MACHINERY",  "FURNITURE",  "HOUSEHOLD",
      "HOUSEHOLD",  "MACHINERY",  "BUILDING",   "FURNITURE",  "HOUSEHOLD",
      "FURNITURE",  "BUILDING",   "HOUSEHOLD",  "BUILDING",   "BUILDING",
      "MACHINERY",  "FURNITURE",  "BUILDING",   "BUILDING",   "HOUSEHOLD",
      "MACHINERY",  "BUILDING",   "BUILDING",   "HOUSEHOLD",  "AUTOMOBILE",
      "HOUSEHOLD",  "HOUSEHOLD",  "AUTOMOBILE", "FURNITURE",  "BUILDING",
      "HOUSEHOLD",  "MACHINERY",  "HOUSEHOLD",  "AUTOMOBILE", "BUILDING",
      "MACHINERY",  "FURNITURE",  "MACHINERY",  "HOUSEHOLD",  "MACHINERY",
      "FURNITURE",  "BUILDING",   "AUTOMOBILE", "AUTOMOBILE", "AUTOMOBILE",
      "MACHINERY",  "BUILDING",   "BUILDING",   "BUILDING",   "FURNITURE",
      "MACHINERY",  "FURNITURE",  "BUILDING",   "HOUSEHOLD",  "BUILDING",
      "MACHINERY",  "BUILDING",   "HOUSEHOLD",  "AUTOMOBILE", "BUILDING",
      "FURNITURE",  "BUILDING",   "FURNITURE",  "MACHINERY",  "FURNITURE",
      "FURNITURE",  "BUILDING",   "BUILDING",   "MACHINERY",  "AUTOMOBILE",
      "HOUSEHOLD",  "AUTOMOBILE", "HOUSEHOLD",  "FURNITURE",  "BUILDING",
      "HOUSEHOLD",  "FURNITURE",  "FURNITURE",  "MACHINERY",  "BUILDING",
      "MACHINERY",  "MACHINERY",  "HOUSEHOLD",  "MACHINERY",  "MACHINERY",
      "AUTOMOBILE", "AUTOMOBILE", "FURNITURE",  "FURNITURE",  "MACHINERY",
      "MACHINERY",  "BUILDING",   "AUTOMOBILE", "HOUSEHOLD",  "HOUSEHOLD",
      "MACHINERY",  "AUTOMOBILE", "FURNITURE",  "HOUSEHOLD",  "HOUSEHOLD",
      "BUILDING",   "BUILDING",   "AUTOMOBILE", "HOUSEHOLD",  "HOUSEHOLD",
      "AUTOMOBILE", "FURNITURE",  "BUILDING",   "FURNITURE",  "BUILDING",
      "HOUSEHOLD",  "HOUSEHOLD",  "AUTOMOBILE", "FURNITURE",  "BUILDING",
      "FURNITURE",  "HOUSEHOLD",  "HOUSEHOLD",  "FURNITURE",  "AUTOMOBILE",
      "HOUSEHOLD",  "FURNITURE",  "BUILDING",   "MACHINERY",  "FURNITURE",
      "FURNITURE",  "FURNITURE",  "FURNITURE",  "AUTOMOBILE", "HOUSEHOLD",
      "MACHINERY",  "MACHINERY",  "HOUSEHOLD",  "FURNITURE",  "AUTOMOBILE",
      "FURNITURE",  "HOUSEHOLD",  "HOUSEHOLD",  "MACHINERY",  "HOUSEHOLD",
      "AUTOMOBILE", "AUTOMOBILE", "FURNITURE",  "HOUSEHOLD",  "BUILDING",
      "HOUSEHOLD",  "BUILDING",   "FURNITURE",  "BUILDING",   "AUTOMOBILE",
      "HOUSEHOLD",  "AUTOMOBILE", "BUILDING",   "AUTOMOBILE", "FURNITURE",
      "AUTOMOBILE", "FURNITURE",  "HOUSEHOLD",  "HOUSEHOLD",  "MACHINERY",
      "HOUSEHOLD",  "BUILDING",   "AUTOMOBILE", "BUILDING",   "BUILDING",
      "AUTOMOBILE", "AUTOMOBILE", "FURNITURE",  "MACHINERY",  "BUILDING",
      "FURNITURE",  "BUILDING",   "MACHINERY",  "BUILDING",   "HOUSEHOLD",
      "HOUSEHOLD",  "AUTOMOBILE", "AUTOMOBILE", "AUTOMOBILE", "AUTOMOBILE",
      "MACHINERY",  "AUTOMOBILE", "MACHINERY",  "HOUSEHOLD",  "MACHINERY",
      "HOUSEHOLD",  "FURNITURE",  "HOUSEHOLD",  "MACHINERY",  "HOUSEHOLD",
      "MACHINERY",  "AUTOMOBILE", "AUTOMOBILE", "BUILDING",   "FURNITURE",
      "HOUSEHOLD",  "AUTOMOBILE", "BUILDING",   "HOUSEHOLD",  "MACHINERY",
      "FURNITURE",  "FURNITURE",  "AUTOMOBILE", "AUTOMOBILE", "BUILDING",
      "AUTOMOBILE", "FURNITURE",  "BUILDING",   "BUILDING",   "FURNITURE",
      "MACHINERY",  "BUILDING",   "MACHINERY",  "BUILDING",   "AUTOMOBILE",
      "AUTOMOBILE", "MACHINERY",  "HOUSEHOLD",  "HOUSEHOLD",  "HOUSEHOLD",
      "AUTOMOBILE", "BUILDING",   "BUILDING",   "AUTOMOBILE", "FURNITURE",
      "BUILDING",   "FURNITURE",  "BUILDING",   "MACHINERY",  "AUTOMOBILE",
      "MACHINERY",  "BUILDING",   "HOUSEHOLD",  "AUTOMOBILE", "BUILDING",
      "MACHINERY",  "AUTOMOBILE", "MACHINERY",  "HOUSEHOLD",  "BUILDING",
      "HOUSEHOLD",  "HOUSEHOLD",  "HOUSEHOLD",  "HOUSEHOLD",  "FURNITURE",
      "MACHINERY",  "FURNITURE",  "AUTOMOBILE", "MACHINERY",  "BUILDING",
      "FURNITURE",  "MACHINERY",  "HOUSEHOLD",  "BUILDING",   "HOUSEHOLD",
      "AUTOMOBILE", "AUTOMOBILE", "HOUSEHOLD",  "FURNITURE",  "BUILDING",
      "BUILDING",   "FURNITURE",  "BUILDING",   "MACHINERY",  "AUTOMOBILE",
      "BUILDING",   "BUILDING",   "BUILDING",   "HOUSEHOLD",  "AUTOMOBILE",
      "AUTOMOBILE", "MACHINERY",  "FURNITURE",  "HOUSEHOLD",  "BUILDING",
      "AUTOMOBILE", "AUTOMOBILE", "MACHINERY",  "HOUSEHOLD",  "FURNITURE",
      "MACHINERY",  "AUTOMOBILE", "FURNITURE",  "BUILDING",   "BUILDING",
      "MACHINERY",  "AUTOMOBILE", "FURNITURE",  "BUILDING",   "BUILDING",
      "HOUSEHOLD",  "AUTOMOBILE", "BUILDING",   "FURNITURE",  "HOUSEHOLD",
      "HOUSEHOLD",  "HOUSEHOLD",  "HOUSEHOLD",  "MACHINERY",  "AUTOMOBILE",
      "FURNITURE",  "BUILDING",   "BUILDING",   "AUTOMOBILE", "BUILDING",
      "FURNITURE",  "MACHINERY",  "BUILDING",   "HOUSEHOLD",  "FURNITURE",
      "BUILDING",   "BUILDING",   "HOUSEHOLD",  "BUILDING",   "HOUSEHOLD",
      "BUILDING",   "MACHINERY",  "BUILDING",   "MACHINERY",  "AUTOMOBILE",
      "FURNITURE",  "BUILDING",   "AUTOMOBILE", "AUTOMOBILE", "HOUSEHOLD",
      "BUILDING",   "HOUSEHOLD",  "BUILDING",   "MACHINERY",  "AUTOMOBILE",
      "AUTOMOBILE", "HOUSEHOLD",  "FURNITURE",  "MACHINERY",  "BUILDING",
      "FURNITURE",  "BUILDING",   "AUTOMOBILE", "HOUSEHOLD",  "AUTOMOBILE",
      "FURNITURE",  "FURNITURE",  "HOUSEHOLD",  "BUILDING",   "AUTOMOBILE",
      "MACHINERY",  "HOUSEHOLD",  "BUILDING",   "MACHINERY",  "FURNITURE",
      "FURNITURE",  "AUTOMOBILE", "MACHINERY",  "AUTOMOBILE", "BUILDING",
      "FURNITURE",  "AUTOMOBILE", "BUILDING",   "BUILDING",   "BUILDING",
      "BUILDING",   "MACHINERY",  "AUTOMOBILE", "AUTOMOBILE", "BUILDING",
      "FURNITURE",  "FURNITURE",  "FURNITURE",  "HOUSEHOLD",  "BUILDING",
      "HOUSEHOLD",  "BUILDING",   "AUTOMOBILE", "AUTOMOBILE", "FURNITURE",
      "MACHINERY",  "MACHINERY",  "FURNITURE",  "HOUSEHOLD",  "FURNITURE",
      "FURNITURE",  "HOUSEHOLD",  "FURNITURE",  "FURNITURE",  "HOUSEHOLD",
      "AUTOMOBILE", "MACHINERY",  "HOUSEHOLD",  "FURNITURE",  "BUILDING",
      "FURNITURE",  "FURNITURE",  "BUILDING",   "AUTOMOBILE", "AUTOMOBILE",
      "AUTOMOBILE", "MACHINERY",  "AUTOMOBILE", "FURNITURE",  "BUILDING",
      "HOUSEHOLD",  "AUTOMOBILE", "FURNITURE",  "BUILDING",   "BUILDING",
      "HOUSEHOLD",  "HOUSEHOLD",  "AUTOMOBILE", "MACHINERY",  "BUILDING",
      "BUILDING",   "FURNITURE",  "FURNITURE",  "MACHINERY",  "AUTOMOBILE",
      "MACHINERY",  "HOUSEHOLD",  "MACHINERY",  "MACHINERY",  "HOUSEHOLD",
      "HOUSEHOLD",  "BUILDING",   "HOUSEHOLD",  "BUILDING",   "AUTOMOBILE",
      "AUTOMOBILE", "MACHINERY",  "HOUSEHOLD",  "MACHINERY",  "FURNITURE",
      "BUILDING",   "BUILDING",   "MACHINERY",  "AUTOMOBILE", "MACHINERY",
      "MACHINERY",  "AUTOMOBILE", "BUILDING",   "FURNITURE",  "AUTOMOBILE",
      "FURNITURE",  "HOUSEHOLD",  "FURNITURE",  "BUILDING",   "BUILDING",
      "FURNITURE",  "BUILDING",   "AUTOMOBILE", "AUTOMOBILE", "FURNITURE",
      "FURNITURE",  "AUTOMOBILE", "BUILDING",   "FURNITURE",  "AUTOMOBILE",
      "HOUSEHOLD",  "FURNITURE",  "FURNITURE",  "FURNITURE",  "HOUSEHOLD",
      "MACHINERY",  "BUILDING",   "HOUSEHOLD",  "FURNITURE",  "MACHINERY",
      "MACHINERY",  "BUILDING",   "BUILDING",   "BUILDING",   "MACHINERY",
      "AUTOMOBILE", "MACHINERY",  "FURNITURE",  "HOUSEHOLD",  "FURNITURE",
      "BUILDING",   "FURNITURE",  "BUILDING",   "MACHINERY",  "AUTOMOBILE",
      "MACHINERY",  "FURNITURE",  "BUILDING",   "AUTOMOBILE", "HOUSEHOLD",
      "BUILDING",   "AUTOMOBILE", "FURNITURE",  "AUTOMOBILE", "BUILDING",
      "AUTOMOBILE", "MACHINERY",  "FURNITURE",  "HOUSEHOLD",  "BUILDING",
      "AUTOMOBILE", "FURNITURE",  "MACHINERY",  "BUILDING",   "BUILDING",
      "MACHINERY",  "MACHINERY",  "AUTOMOBILE", "MACHINERY",  "AUTOMOBILE",
      "BUILDING",   "MACHINERY",  "HOUSEHOLD",  "BUILDING",   "AUTOMOBILE",
      "BUILDING",   "AUTOMOBILE", "BUILDING",   "AUTOMOBILE", "HOUSEHOLD",
      "AUTOMOBILE", "MACHINERY",  "FURNITURE",  "FURNITURE",  "MACHINERY",
      "MACHINERY",  "AUTOMOBILE", "AUTOMOBILE", "FURNITURE",  "AUTOMOBILE",
      "MACHINERY",  "BUILDING",   "AUTOMOBILE", "BUILDING",   "HOUSEHOLD",
      "AUTOMOBILE", "FURNITURE",  "BUILDING",   "HOUSEHOLD",  "AUTOMOBILE",
      "BUILDING",   "BUILDING",   "AUTOMOBILE", "FURNITURE",  "BUILDING",
      "MACHINERY",  "FURNITURE",  "HOUSEHOLD",  "BUILDING",   "HOUSEHOLD",
      "BUILDING",   "BUILDING",   "BUILDING",   "MACHINERY",  "FURNITURE",
      "HOUSEHOLD",  "BUILDING",   "MACHINERY",  "HOUSEHOLD",  "HOUSEHOLD",
      "HOUSEHOLD",  "AUTOMOBILE", "MACHINERY",  "HOUSEHOLD",  "HOUSEHOLD",
      "BUILDING",   "HOUSEHOLD",  "MACHINERY",  "MACHINERY",  "HOUSEHOLD",
      "MACHINERY",  "FURNITURE",  "AUTOMOBILE", "BUILDING",   "FURNITURE",
      "MACHINERY",  "HOUSEHOLD",  "BUILDING",   "BUILDING",   "BUILDING",
      "AUTOMOBILE", "AUTOMOBILE", "MACHINERY",  "AUTOMOBILE", "MACHINERY",
      "MACHINERY",  "BUILDING",   "FURNITURE",  "FURNITURE",  "BUILDING",
      "FURNITURE",  "MACHINERY",  "BUILDING",   "BUILDING",   "AUTOMOBILE",
      "BUILDING",   "HOUSEHOLD",  "HOUSEHOLD",  "MACHINERY",  "MACHINERY",
      "FURNITURE",  "MACHINERY",  "FURNITURE",  "AUTOMOBILE", "BUILDING",
      "MACHINERY",  "HOUSEHOLD",  "AUTOMOBILE", "AUTOMOBILE", "FURNITURE",
      "HOUSEHOLD",  "AUTOMOBILE", "BUILDING",   "FURNITURE",  "HOUSEHOLD",
      "MACHINERY",  "MACHINERY",  "HOUSEHOLD",  "BUILDING",   "BUILDING",
      "AUTOMOBILE", "FURNITURE",  "HOUSEHOLD",  "AUTOMOBILE", "AUTOMOBILE",
      "MACHINERY",  "BUILDING",   "MACHINERY",  "BUILDING",   "MACHINERY",
      "AUTOMOBILE", "AUTOMOBILE", "BUILDING",   "HOUSEHOLD",  "HOUSEHOLD",
      "MACHINERY",  "AUTOMOBILE", "MACHINERY",  "HOUSEHOLD",  "FURNITURE",
      "FURNITURE",  "AUTOMOBILE", "BUILDING",   "BUILDING",   "AUTOMOBILE",
      "MACHINERY",  "AUTOMOBILE", "AUTOMOBILE", "BUILDING",   "HOUSEHOLD",
      "FURNITURE",  "HOUSEHOLD",  "AUTOMOBILE", "MACHINERY",  "MACHINERY",
      "BUILDING",   "HOUSEHOLD",  "HOUSEHOLD",  "BUILDING",   "MACHINERY",
      "HOUSEHOLD",  "HOUSEHOLD",  "MACHINERY",  "HOUSEHOLD",  "AUTOMOBILE",
      "MACHINERY",  "AUTOMOBILE", "BUILDING",   "HOUSEHOLD",  "MACHINERY",
      "MACHINERY",  "FURNITURE",  "FURNITURE",  "MACHINERY",  "HOUSEHOLD",
      "HOUSEHOLD",  "FURNITURE",  "FURNITURE",  "AUTOMOBILE", "FURNITURE",
      "BUILDING",   "FURNITURE",  "HOUSEHOLD",  "AUTOMOBILE", "BUILDING",
      "AUTOMOBILE", "AUTOMOBILE", "BUILDING",   "BUILDING",   "BUILDING",
      "BUILDING",   "AUTOMOBILE", "MACHINERY",  "HOUSEHOLD",  "MACHINERY",
      "AUTOMOBILE", "BUILDING",   "AUTOMOBILE", "FURNITURE",  "FURNITURE",
      "BUILDING",   "FURNITURE",  "AUTOMOBILE", "AUTOMOBILE", "HOUSEHOLD",
      "BUILDING",   "BUILDING",   "MACHINERY",  "HOUSEHOLD",  "HOUSEHOLD",
      "HOUSEHOLD",  "AUTOMOBILE", "BUILDING",   "HOUSEHOLD",  "AUTOMOBILE",
      "HOUSEHOLD",  "HOUSEHOLD",  "HOUSEHOLD",  "BUILDING",   "MACHINERY",
      "AUTOMOBILE", "FURNITURE",  "AUTOMOBILE", "FURNITURE",  "FURNITURE",
      "FURNITURE",  "AUTOMOBILE", "BUILDING",   "HOUSEHOLD",  "MACHINERY",
      "FURNITURE",  "FURNITURE",  "AUTOMOBILE", "FURNITURE",  "MACHINERY",
      "AUTOMOBILE", "MACHINERY",  "MACHINERY",  "FURNITURE",  "BUILDING",
      "MACHINERY",  "BUILDING",   "BUILDING",   "FURNITURE",  "FURNITURE",
      "HOUSEHOLD",  "BUILDING",   "MACHINERY",  "BUILDING",   "FURNITURE",
      "BUILDING",   "MACHINERY",  "AUTOMOBILE", "BUILDING",   "AUTOMOBILE",
      "MACHINERY",  "MACHINERY",  "BUILDING",   "HOUSEHOLD",  "FURNITURE",
      "MACHINERY",  "HOUSEHOLD",  "AUTOMOBILE", "HOUSEHOLD",  "MACHINERY",
      "BUILDING",   "MACHINERY",  "MACHINERY",  "MACHINERY",  "MACHINERY",
      "MACHINERY",  "BUILDING",   "BUILDING",   "BUILDING",   "MACHINERY",
      "HOUSEHOLD",  "FURNITURE",  "AUTOMOBILE", "AUTOMOBILE", "MACHINERY",
      "AUTOMOBILE", "BUILDING",   "HOUSEHOLD",  "BUILDING",   "HOUSEHOLD",
      "AUTOMOBILE", "FURNITURE",  "AUTOMOBILE", "BUILDING",   "HOUSEHOLD",
      "MACHINERY",  "MACHINERY",  "HOUSEHOLD",  "MACHINERY",  "MACHINERY",
      "BUILDING",   "BUILDING",   "HOUSEHOLD",  "AUTOMOBILE", "BUILDING",
      "MACHINERY",  "HOUSEHOLD",  "AUTOMOBILE", "HOUSEHOLD",  "BUILDING",
      "MACHINERY",  "MACHINERY",  "MACHINERY",  "AUTOMOBILE", "MACHINERY",
      "MACHINERY",  "MACHINERY",  "MACHINERY",  "AUTOMOBILE", "HOUSEHOLD",
      "FURNITURE",  "BUILDING",   "MACHINERY",  "HOUSEHOLD",  "AUTOMOBILE",
      "BUILDING",   "AUTOMOBILE", "BUILDING",   "MACHINERY",  "MACHINERY",
      "FURNITURE",  "FURNITURE",  "HOUSEHOLD",  "AUTOMOBILE", "HOUSEHOLD",
      "HOUSEHOLD",  "MACHINERY",  "AUTOMOBILE", "BUILDING",   "BUILDING",
      "BUILDING",   "FURNITURE",  "AUTOMOBILE", "BUILDING",   "BUILDING",
      "AUTOMOBILE", "MACHINERY",  "BUILDING",   "MACHINERY",  "HOUSEHOLD",
      "MACHINERY",  "MACHINERY",  "AUTOMOBILE", "AUTOMOBILE", "BUILDING",
      "FURNITURE",  "HOUSEHOLD",  "MACHINERY",  "AUTOMOBILE", "AUTOMOBILE",
      "FURNITURE",  "FURNITURE",  "MACHINERY",  "MACHINERY",  "AUTOMOBILE",
      "HOUSEHOLD",  "BUILDING",   "BUILDING",   "FURNITURE",  "MACHINERY",
      "HOUSEHOLD",  "MACHINERY",  "HOUSEHOLD",  "BUILDING",   "MACHINERY",
      "HOUSEHOLD",  "HOUSEHOLD",  "BUILDING",   "AUTOMOBILE", "BUILDING",
      "BUILDING",   "HOUSEHOLD",  "FURNITURE",  "AUTOMOBILE", "BUILDING",
      "HOUSEHOLD",  "MACHINERY",  "HOUSEHOLD",  "MACHINERY",  "HOUSEHOLD",
      "BUILDING",   "AUTOMOBILE", "AUTOMOBILE", "HOUSEHOLD",  "BUILDING",
      "BUILDING",   "BUILDING",   "FURNITURE",  "FURNITURE",  "HOUSEHOLD",
      "FURNITURE",  "HOUSEHOLD",  "FURNITURE",  "MACHINERY",  "MACHINERY",
      "BUILDING",   "AUTOMOBILE", "HOUSEHOLD",  "AUTOMOBILE", "BUILDING",
      "BUILDING",   "AUTOMOBILE", "HOUSEHOLD",  "MACHINERY",  "BUILDING",
      "HOUSEHOLD",  "BUILDING",   "HOUSEHOLD",  "MACHINERY",  "HOUSEHOLD",
      "AUTOMOBILE", "BUILDING",   "AUTOMOBILE", "BUILDING",   "BUILDING",
      "MACHINERY",  "FURNITURE",  "AUTOMOBILE", "FURNITURE",  "AUTOMOBILE",
      "MACHINERY",  "MACHINERY",  "FURNITURE",  "FURNITURE",  "FURNITURE",
      "HOUSEHOLD",  "AUTOMOBILE", "FURNITURE",  "AUTOMOBILE", "BUILDING",
      "AUTOMOBILE", "MACHINERY",  "BUILDING",   "MACHINERY",  "AUTOMOBILE",
      "MACHINERY",  "BUILDING",   "FURNITURE",  "AUTOMOBILE", "BUILDING",
      "BUILDING",   "MACHINERY",  "HOUSEHOLD",  "HOUSEHOLD",  "HOUSEHOLD",
      "BUILDING",   "BUILDING",   "AUTOMOBILE", "BUILDING",   "MACHINERY",
      "FURNITURE",  "FURNITURE",  "BUILDING",   "FURNITURE",  "MACHINERY",
      "AUTOMOBILE", "BUILDING",   "AUTOMOBILE", "AUTOMOBILE", "BUILDING",
      "AUTOMOBILE", "FURNITURE",  "MACHINERY",  "AUTOMOBILE", "FURNITURE",
      "FURNITURE",  "FURNITURE",  "BUILDING",   "FURNITURE",  "HOUSEHOLD",
      "AUTOMOBILE", "MACHINERY",  "MACHINERY",  "HOUSEHOLD",  "BUILDING",
      "BUILDING",   "MACHINERY",  "AUTOMOBILE", "BUILDING",   "HOUSEHOLD",
      "AUTOMOBILE", "FURNITURE",  "BUILDING",   "FURNITURE",  "BUILDING",
      "BUILDING",   "FURNITURE",  "HOUSEHOLD",  "MACHINERY",  "MACHINERY",
      "HOUSEHOLD",  "HOUSEHOLD",  "MACHINERY",  "MACHINERY",  "FURNITURE",
      "AUTOMOBILE", "AUTOMOBILE", "AUTOMOBILE", "AUTOMOBILE", "MACHINERY"};

  CustomerBatch customerBatch;
  customerBatch.numRows = 1500;
  customerBatch.c_phone.reserve(customerBatch.numRows);
  customerBatch.c_acctbal = c_acctbal;
  customerBatch.c_mktsegment.reserve(customerBatch.numRows);

  size_t c_phoneOffs = 0;
  size_t c_mktsegmentOffs = 0;
  for (size_t i = 0; i < customerBatch.numRows; ++i) {
    customerBatch.c_phone.emplace_back(c_phoneOffs, c_phone[i].size());
    std::copy(c_phone[i].begin(), c_phone[i].end(),
              std::back_inserter(customerBatch.c_phoneData));

    customerBatch.c_mktsegment.emplace_back(c_mktsegmentOffs,
                                            c_mktsegment[i].size());
    std::copy(c_mktsegment[i].begin(), c_mktsegment[i].end(),
              std::back_inserter(customerBatch.c_mktsegmentData));

    c_phoneOffs += c_phone[i].size();
    c_mktsegmentOffs += c_mktsegment[i].size();
  }

  SubqueryBatch subqueryBatch;
  OutputBatch outputBatch;

  pipeline1(customerBatch, subqueryBatch);
  pipeline2(subqueryBatch, outputBatch);

  if (verifyOutput(outputBatch)) {
    std::cout << "success!";
  } else {
    std::cout << "failure!";
  }

  return 0;
}
